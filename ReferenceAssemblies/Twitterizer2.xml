<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Twitterizer2</name>
    </assembly>
    <members>
        <member name="T:Twitterizer.Information">
            <summary>
            The information class which gives general information about the assembly.
            </summary>
        </member>
        <member name="M:Twitterizer.Information.AssemblyVersion">
            <summary>
            Obtains the current assembly version.
            </summary>
            <returns>The assembly version string in the format (#.#.#.#)</returns>
        </member>
        <member name="T:Twitterizer.Core.TwitterCollection`1">
            <summary>
            The base class for object collections.
            </summary>
            <typeparam name="T">The type of object stored in the collection.</typeparam>
        </member>
        <member name="T:Twitterizer.Commands.ShowFriendshipCommand">
            <summary>
            The show friendship command class.
            </summary>
        </member>
        <member name="T:Twitterizer.Core.TwitterCommand`1">
            <summary>
            The base command class.
            </summary>
            <typeparam name="T">The business object the command should return.</typeparam>
        </member>
        <member name="T:Twitterizer.Core.ICommand`1">
            <summary>
            The ICommand interface.
            </summary>
            <typeparam name="T">The Type of the BaseObject that the command returns</typeparam>
            <tocexclude />
        </member>
        <member name="M:Twitterizer.Core.ICommand`1.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Core.ICommand`1.ExecuteCommand">
            <summary>
            Executes the command.
            </summary>
            <returns>The results of the command.</returns>
            <see cref="T:Twitterizer.Core.TwitterObject"/>
        </member>
        <member name="P:Twitterizer.Core.ICommand`1.RequestParameters">
            <summary>
            Gets the request parameters.
            </summary>
            <value>The request parameters.</value>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.#ctor(Twitterizer.HTTPVerb,System.String,Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Core.TwitterCommand`1"/> class.
            </summary>
            <param name="method">The method.</param>
            <param name="endPoint">The end point.</param>
            <param name="tokens">The tokens.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.ExecuteCommand">
            <summary>
            Executes the command.
            </summary>
            <returns>The results of the command.</returns>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.SetStatusCode(Twitterizer.TwitterResponse{`0},System.Net.HttpStatusCode,Twitterizer.RateLimiting)">
            <summary>
            Sets the status code.
            </summary>
            <param name="twitterResponse">The twitter response.</param>
            <param name="statusCode">The status code.</param>
            <param name="rateLimiting">The rate limiting.</param>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.</returns>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.SetCommandUri(System.String)">
            <summary>
            Sets the command URI.
            </summary>
            <param name="endPoint">The end point.</param>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.ParseRateLimitHeaders(System.Net.WebHeaderCollection)">
            <summary>
            Parses the rate limit headers.
            </summary>
            <param name="responseHeaders">The headers of the web response.</param>
            <returns>An object that contains the rate-limiting info contained in the response headers</returns>
        </member>
        <member name="M:Twitterizer.Core.TwitterCommand`1.AddResultToCache(System.Text.StringBuilder,System.Web.Caching.Cache,`0)">
            <summary>
            Adds the result to cache.
            </summary>
            <param name="cacheKeyBuilder">The cache key builder.</param>
            <param name="cache">The cache.</param>
            <param name="resultObject">The result object.</param>
        </member>
        <member name="P:Twitterizer.Core.TwitterCommand`1.OptionalProperties">
            <summary>
            Gets or sets the optional properties.
            </summary>
            <value>The optional properties.</value>
        </member>
        <member name="P:Twitterizer.Core.TwitterCommand`1.Uri">
            <summary>
            Gets or sets the API method URI.
            </summary>
            <value>The URI for the API method.</value>
        </member>
        <member name="P:Twitterizer.Core.TwitterCommand`1.Verb">
            <summary>
            Gets or sets the method.
            </summary>
            <value>The method.</value>
        </member>
        <member name="P:Twitterizer.Core.TwitterCommand`1.RequestParameters">
            <summary>
            Gets or sets the request parameters.
            </summary>
            <value>The request parameters.</value>
        </member>
        <member name="P:Twitterizer.Core.TwitterCommand`1.ImageToUpload">
            <summary>
            Gets or sets the image to upload.
            </summary>
            <value>The image to upload.</value>
        </member>
        <member name="P:Twitterizer.Core.TwitterCommand`1.DeserializationHandler">
            <summary>
            Gets or sets the serialization delegate.
            </summary>
            <value>The serialization delegate.</value>
        </member>
        <member name="P:Twitterizer.Core.TwitterCommand`1.Tokens">
            <summary>
            Gets the request tokens.
            </summary>
            <value>The request tokens.</value>
        </member>
        <member name="F:Twitterizer.Commands.ShowFriendshipCommand.Path">
            <summary>
            The base address to the API method.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.ShowFriendshipCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,System.String,System.Decimal,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ShowFriendshipCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="sourceUserId">The source user id.</param>
            <param name="sourceUserName">Name of the source user.</param>
            <param name="targetUserId">The target user id.</param>
            <param name="targetScreenName">Name of the target screen.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Commands.ShowFriendshipCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.ShowFriendshipCommand.SourceId">
            <summary>
            Gets or sets the id of the source user.
            </summary>
            <value>The source id.</value>
        </member>
        <member name="P:Twitterizer.Commands.ShowFriendshipCommand.SourceScreenName">
            <summary>
            Gets or sets the screenname of the source user.
            </summary>
            <value>The screenname of the source user.</value>
        </member>
        <member name="P:Twitterizer.Commands.ShowFriendshipCommand.TargetId">
            <summary>
            Gets or sets the id of the target user.
            </summary>
            <value>The target id.</value>
        </member>
        <member name="P:Twitterizer.Commands.ShowFriendshipCommand.TargetScreenName">
            <summary>
            Gets or sets the screenname of the target user.
            </summary>
            <value>The screenname of the target user.</value>
        </member>
        <member name="T:Twitterizer.Commands.ListStatusesCommand">
            <summary>
            The get list statuses command class
            </summary>
        </member>
        <member name="T:Twitterizer.Core.PagedCommand`1">
            <summary>
            The IPagedCommand interface.
            </summary>
            <typeparam name="T">The type of BaseObject that the command returns.</typeparam>
        </member>
        <member name="M:Twitterizer.Core.PagedCommand`1.#ctor(Twitterizer.HTTPVerb,System.String,Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> class.
            </summary>
            <param name="httpMethod">The HTTP method.</param>
            <param name="endPoint">The end point.</param>
            <param name="tokens">The tokens.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="P:Twitterizer.Core.PagedCommand`1.Page">
            <summary>
            Gets or sets the page number to obtain.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="M:Twitterizer.Commands.ListStatusesCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.ListStatusesOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ListStatusesCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="username">The username.</param>
            <param name="listId">The list id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.ListStatusesCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.ListStatusesCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="P:Twitterizer.Commands.ListStatusesCommand.Username">
            <summary>
            Gets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Twitterizer.Commands.ListStatusesCommand.ListIdOrSlug">
            <summary>
            Gets the list id.
            </summary>
            <value>The list id.</value>
        </member>
        <member name="T:Twitterizer.Commands.ListMembershipsCommand">
            <summary>
            The list membership command class
            </summary>
        </member>
        <member name="T:Twitterizer.Core.CursorPagedCommand`1">
            <summary>
            The CursorCursorPagedCommand class.
            </summary>
            <typeparam name="T">The type of BaseObject that the command returns.</typeparam>
            <tocexclude />
        </member>
        <member name="M:Twitterizer.Core.CursorPagedCommand`1.#ctor(Twitterizer.HTTPVerb,System.String,Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Core.CursorPagedCommand`1"/> class.
            </summary>
            <param name="method">The method.</param>
            <param name="endPoint">The end point.</param>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:Twitterizer.Core.CursorPagedCommand`1.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
            <remarks>
            Optional. 
            Breaks the results into pages. 
            A single page contains 100 users.
            </remarks>
        </member>
        <member name="M:Twitterizer.Commands.ListMembershipsCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ListMembershipsCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="username">The username.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.ListMembershipsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.ListMembershipsCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="P:Twitterizer.Commands.ListMembershipsCommand.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="T:Twitterizer.FollowersOptions">
            <summary>
            The followers options class. Provides a payload for optional parameters of the FollowersCommand class.
            </summary>
        </member>
        <member name="T:Twitterizer.OptionalProperties">
            <summary>
      Provides a base class for method specific optional parameters, as well as properties for providing configuration settings at run time.
    </summary>
        </member>
        <member name="M:Twitterizer.OptionalProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.OptionalProperties"/> class.
            </summary>
        </member>
        <member name="M:Twitterizer.OptionalProperties.ReadConfigurationSettings">
            <summary>
            Reads the configuration settings.
            </summary>
        </member>
        <member name="P:Twitterizer.OptionalProperties.UseSSL">
            <summary>
      Allows modification of the API endpoint addresses to enable SSL communication.
    </summary><remarks>
      The default value can be set at an application level by adding a <c>Twitterizer2.EnableSSL</c> application setting with the value <c>true</c>.
      For example:
      <code lang="xml">
        <![CDATA[<configuration>
  <appSettings>
    <!-- Enable use of SSL to reach Twitter -->
    <add key="Twitterizer2.EnableSSL" value="true" />
  </appSettings>
<configuration>]]>
      </code>
    </remarks><value>
      The current configured value. <c>true</c> if enabled, otherwise <c>false</c>. Default: <c>false</c>
    </value>
            <summary>
             Allows configuration of the base address for API method requests for support for 3rd party 'twitter-like' APIs.
            </summary>
        </member>
        <member name="P:Twitterizer.OptionalProperties.APIBaseAddress">
            <remarks>
      The default value can be set at an application level by adding a <c>Twitterizer2.APIBaseAddress</c> application setting with the base address as the value.
      For example:
      <code lang="xml">
        <![CDATA[<configuration>
  <appSettings>
    <!-- Set or change this value to interface with a non-twitter API (like Wordpress) -->
    <add key="Twitterizer2.APIBaseAddress" value="http://api.twitter.com/1/" />
  </appSettings>
<configuration>]]>
      </code>
    </remarks><value>The API end point base address. Default: "http://api.twitter.com/1/"</value>
        </member>
        <member name="P:Twitterizer.OptionalProperties.Proxy">
            <summary>
      Allows overriding of the default proxy settings for API call requests.
    </summary><value>
      The supplied <see cref="T:System.Net.WebProxy"/>, or <c>null</c>.
    </value>
        </member>
        <member name="P:Twitterizer.OptionalProperties.CacheOutput">
            <summary>
      Allows run time enabling of API output caching.
    </summary><remarks>
      The default value can be set at an application level by adding a <c>Twitterizer2.EnableCaching</c> application setting with value <c>true</c>.
      For example:
      <code lang="xml">
        <![CDATA[<configuration>
  <appSettings>
    <!-- Enable caching results -->
    <add key="Twitterizer2.EnableCaching" value="true" />
  </appSettings>
<configuration>]]>
      </code>
    </remarks><value>
      The currently configured value. <c>true</c> if enabled, otherwise <c>false</c>. Default: <c>false</c>
    </value><seealso cref="P:Twitterizer.OptionalProperties.CacheOutput"/>
        </member>
        <member name="P:Twitterizer.OptionalProperties.CacheTimespan">
            <summary>
      Allows configuration of the sliding expiration timespan for output caching.
    </summary><remarks>
      The default value can be set at an application level by adding a <c>Twitterizer2.CacheTimeout</c> application setting with value equal to the number of seconds of the duration.
      For example:
      <code lang="xml">
        <![CDATA[<configuration>
  <appSettings>
    <!-- Sets the number of seconds to cache results (default is 5 minutes) -->
    <add key="Twitterizer2.CacheTimeout" value="300"/>
  </appSettings>
<configuration>]]>
      </code>
    </remarks><value>
      The duration that API output should be cached, on a sliding expiration, once enabled. Default: 5 minutes
    </value><seealso cref="P:Twitterizer.OptionalProperties.CacheOutput"/>
        </member>
        <member name="P:Twitterizer.FollowersOptions.UserId">
            <summary>
            Gets or sets the ID of the user for whom to request a list of followers. 
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.FollowersOptions.ScreenName">
            <summary>
            Gets or sets the screen name of the user for whom to request a list of followers. 
            </summary>
            <value>The name of the screen.</value>
        </member>
        <member name="T:Twitterizer.Core.ITwitterObject">
            <summary>
            The ITwitterObject interface.
            </summary>
            <tocexclude />
        </member>
        <member name="P:Twitterizer.Core.ITwitterObject.Annotations">
            <summary>
            Annotations are additional pieces of data, supplied by Twitter clients, in a non-structured dictionary.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="T:Twitterizer.TwitterFavorite">
            <summary>
            The TwitterFavorite class. Provides static methods for manipulating favorite tweets.
            </summary>
        </member>
        <member name="T:Twitterizer.Core.TwitterObject">
            <summary>
            The base object class
            </summary>
        </member>
        <member name="F:Twitterizer.Core.TwitterObject.DateFormat">
            <summary>
            The format that all twitter dates are in.
            </summary>
        </member>
        <member name="F:Twitterizer.Core.TwitterObject.SearchDateFormat">
            <summary>
            The format that all twitter search api dates are in.
            </summary>
        </member>
        <member name="P:Twitterizer.Core.TwitterObject.Annotations">
            <summary>
            Annotations are additional pieces of data, supplied by Twitter clients, in a non-structured dictionary.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.#ctor">
            <summary>
            Prevents a default instance of the TwitterFavorite class from being created.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.Create(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Favorites the status specified in the ID parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
            <returns>The favorite status when successful.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.Create(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Favorites the status specified in the ID parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <returns>The favorite status when successful.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.Delete(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Un-favorites the status specified in the ID parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
            <returns>The un-favorited status in the requested format when successful.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.Delete(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Un-favorites the status specified in the ID parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <returns>
            The un-favorited status in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.List(Twitterizer.OAuthTokens,Twitterizer.ListFavoritesOptions)">
            <summary>
            Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>The 20 most recent favorite statuses</returns>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.List(Twitterizer.OAuthTokens)">
            <summary>
            Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>The 20 most recent favorite statuses</returns>
        </member>
        <member name="M:Twitterizer.TwitterFavorite.List(Twitterizer.ListFavoritesOptions)">
            <summary>
            Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.
            </summary>
            <param name="options">The options.</param>
            <returns>The 20 most recent favorite statuses</returns>
        </member>
        <member name="T:Twitterizer.TwitterRateLimitStatus">
            <summary>
            The Twitter Rate Limit Status class
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterRateLimitStatus.GetStatus(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Gets the rate limiting status status for the authenticated user.
            </summary>
            <param name="tokens">The OAuth tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterRateLimitStatus"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterRateLimitStatus.GetStatus(Twitterizer.OAuthTokens)">
            <summary>
            Gets the rate limiting status status based on the application's IP address.
            </summary>
            <param name="tokens">The OAuth tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterRateLimitStatus"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterRateLimitStatus.GetStatus">
            <summary>
            Gets the rate limiting status status based on the application's IP address.
            </summary>
            <returns>
            A <see cref="T:Twitterizer.TwitterRateLimitStatus"/> instance.
            </returns>
        </member>
        <member name="P:Twitterizer.TwitterRateLimitStatus.RemainingHits">
            <summary>
            Gets or sets the remaining hits.
            </summary>
            <value>The remaining hits.</value>
        </member>
        <member name="P:Twitterizer.TwitterRateLimitStatus.HourlyLimit">
            <summary>
            Gets or sets the hourly limit.
            </summary>
            <value>The hourly limit.</value>
        </member>
        <member name="P:Twitterizer.TwitterRateLimitStatus.ResetTime">
            <summary>
            Gets or sets the UTC string value of the time rate limiting will reset.
            </summary>
            <value>The reset time string.</value>
        </member>
        <member name="T:Twitterizer.XAuthUtility">
            <summary>
            The XAuthUtility class.
            </summary>
        </member>
        <member name="M:Twitterizer.XAuthUtility.GetAccessTokens(System.String,System.String,System.String,System.String)">
            <summary>
            Allows OAuth applications to directly exchange Twitter usernames and passwords for OAuth access tokens and secrets.
            </summary>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="username">The username.</param>
            <param name="password">The password.</param>
            <returns>A <see cref="T:Twitterizer.OAuthTokenResponse"/> instance.</returns>
        </member>
        <member name="T:Twitterizer.Core.SerializationHelper`1">
            <summary>
            The Serialization Helper class. Provides a simple interface for common serialization tasks.
            </summary>
            <typeparam name="T">The type of object to be deserialized</typeparam>
        </member>
        <member name="M:Twitterizer.Core.SerializationHelper`1.Deserialize(System.Byte[],Twitterizer.Core.SerializationHelper{`0}.DeserializationHandler)">
            <summary>
            Deserializes the specified web response.
            </summary>
            <param name="webResponseData">The web response data.</param>
            <param name="deserializationHandler">The deserialization handler.</param>
            <returns>
            A strongly typed object representing the deserialized data of type <typeparamref name="T"/>
            </returns>
        </member>
        <member name="M:Twitterizer.Core.SerializationHelper`1.Deserialize(System.Byte[])">
            <summary>
            Deserializes the specified web response.
            </summary>
            <param name="webResponseData">The web response data.</param>
            <returns>
            A strongly typed object representing the deserialized data of type <typeparamref name="T"/>
            </returns>
        </member>
        <member name="T:Twitterizer.Core.SerializationHelper`1.DeserializationHandler">
            <summary>
            The JavascriptConversionDelegate. The delegate is invokes when using the JavaScriptSerializer to manually construct a result object.
            </summary>
            <param name="value">Contains nested dictionary objects containing deserialized values for manual parsing.</param>
            <returns>A strongly typed object representing the deserialized data of type <typeparamref name="T" />
            </returns>
        </member>
        <member name="T:Twitterizer.LookupUsersOptions">
            <summary>
            Provides optional parameters for user lookup methods.
            </summary>
        </member>
        <member name="M:Twitterizer.LookupUsersOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.LookupUsersOptions"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.LookupUsersOptions.ScreenNames">
            <summary>
            Gets or sets the screen names.
            </summary>
            <value>The screen names.</value>
        </member>
        <member name="P:Twitterizer.LookupUsersOptions.UserIds">
            <summary>
            Gets or sets the user ids.
            </summary>
            <value>The user ids.</value>
        </member>
        <member name="P:Twitterizer.LookupUsersOptions.IncludeEntities">
            <summary>
            Gets or sets a value indicating whether [include entities].
            </summary>
            <value><c>true</c> if [include entities]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.Commands.FollowersCommand">
            <summary>
            The command to obtain followers of a user.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FollowersCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.FollowersOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.FollowersCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.FollowersCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FollowersCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned command object.</returns>
        </member>
        <member name="T:Twitterizer.Commands.RetweetCommand">
            <summary>
            The retweet command class.
            </summary>
        </member>
        <member name="F:Twitterizer.Commands.RetweetCommand.Path">
            <summary>
            The base address to the API method.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RetweetCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RetweetCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.RateLimitStatusCommand">
            <summary>
            The rate limit status command class.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RateLimitStatusCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RateLimitStatusCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RateLimitStatusCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.PagedTimelineCommand`1">
            <summary>
            The Paged Timeline Command class. Provides common functionality for all of the paged timeline command classes.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Twitterizer.Commands.PagedTimelineCommand`1.#ctor(Twitterizer.HTTPVerb,System.String,Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.PagedTimelineCommand`1"/> class.
            </summary>
            <param name="httpMethod">The HTTP method.</param>
            <param name="endPoint">The end point.</param>
            <param name="tokens">The tokens.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Commands.PagedTimelineCommand`1.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterSavedSearchCollection">
            <summary>
            The TwitterSavedSearchCollection class.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearchCollection.NextPage">
            <summary>
            Gets the next page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterSavedSearchCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearchCollection.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterSavedSearchCollection"/> instance.</returns>
        </member>
        <member name="P:Twitterizer.TwitterSavedSearchCollection.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Twitterizer.Commands.DeleteListCommand">
            <summary>
            The create list command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DeleteListCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DeleteListCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.DeleteListCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterPlaceCollection">
            <summary>
            The Twitter Place Collection class. A collection of <see cref="T:Twitterizer.TwitterPlace"/> objects.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterPlaceCollection.Converter">
            <summary>
            Converts json data to a <see cref="T:Twitterizer.TwitterPlaceCollection"/>.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterPlaceCollection.Converter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterPlaceCollection.Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="M:Twitterizer.TwitterPlaceCollection.Converter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the JSON representation of the object.
            </summary>
            <param name="writer">The <see cref="T:Newtonsoft.Json.JsonWriter"/> to write to.</param>
            <param name="value">The value.</param>
            <param name="serializer">The calling serializer.</param>
        </member>
        <member name="T:Twitterizer.TwitterSearchResultCollection">
            <summary>
            The Twitter Search Result Collection class
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterSearchResultCollection.Deserialize(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="T:Twitterizer.TwitterSearch">
            <summary>
            The Twitter Search Class
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterSearch.Search(System.String)">
            <summary>
            Searches Twitter with the the specified query.
            </summary>
            <param name="query">The query.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterSearchResultCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterSearch.Search(System.String,Twitterizer.SearchOptions)">
            <summary>
            Searches Twitter with the the specified query.
            </summary>
            <param name="query">The query.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterSearchResultCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterSearch.Search(Twitterizer.OAuthTokens,System.String,Twitterizer.SearchOptions)">
            <summary>
            Searches Twitter with the the specified query.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="query">The query.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterSearchResultCollection"/> instance.
            </returns>
        </member>
        <member name="T:Twitterizer.UserSearchOptions">
            <summary>
            The user search options class. Provides a payload for optional parameters of the UserSearchCommand class.
            </summary>
        </member>
        <member name="P:Twitterizer.UserSearchOptions.NumberPerPage">
            <summary>
            Gets or sets the number per page. Cannot be greater than 20.
            </summary>
            <value>The number per page.</value>
        </member>
        <member name="P:Twitterizer.UserSearchOptions.Page">
            <summary>
            Gets or sets the page of results to retrieve.
            </summary>
            <value>The page of results to retrieve.</value>
        </member>
        <member name="T:Twitterizer.Commands.LookupUsersCommand">
            <summary>
            The Lookup Users command class.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.LookupUsersCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.LookupUsersOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.LookupUsersCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.LookupUsersCommand.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterTimeline">
            <summary>
            Provides interaction with timelines
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.HomeTimeline(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <overloads>
            Returns the 20 most recent statuses, including retweets, posted by the authenticating user and that user's friends. This is the equivalent of /timeline/home on the Web.
            </overloads>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>A collection of <see cref="T:Twitterizer.TwitterStatus"/> items.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.HomeTimeline(Twitterizer.OAuthTokens)">
            <param name="tokens">The tokens.</param>
            <returns>A collection of <see cref="T:Twitterizer.TwitterStatus"/> items.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.HomeTimeline(Twitterizer.TimelineOptions)">
            <param name="options">The options.</param>
            <returns>A collection of <see cref="T:Twitterizer.TwitterStatus"/> items.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.UserTimeline(Twitterizer.OAuthTokens,Twitterizer.UserTimelineOptions)">
            <summary>
            Returns the 20 most recent statuses posted by the authenticating user. It is also possible to request another user's timeline by using the screen_name or user_id parameter.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.UserTimeline(Twitterizer.OAuthTokens)">
            <summary>
            Returns the 20 most recent statuses posted by the authenticating user. It is also possible to request another user's timeline by using the screen_name or user_id parameter.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.UserTimeline(Twitterizer.UserTimelineOptions)">
            <summary>
            Returns the 20 most recent statuses posted by the authenticating user. It is also possible to request another user's timeline by using the screen_name or user_id parameter.
            </summary>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.PublicTimeline">
            <summary>
            Gets the public timeline.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/>.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.PublicTimeline(Twitterizer.OAuthTokens)">
            <summary>
            Gets the public timeline.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.PublicTimeline(Twitterizer.OptionalProperties)">
            <summary>
            Gets the public timeline.
            </summary>
            <param name="options">The properties.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.PublicTimeline(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Gets the public timeline.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.FriendTimeline(Twitterizer.OAuthTokens)">
            <summary>
            Obtains the authorized user's friends timeline.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/>.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.FriendTimeline(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Obtains the authorized user's friends timeline.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/>.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.RetweetsOfMe(Twitterizer.OAuthTokens,Twitterizer.RetweetsOfMeOptions)">
            <summary>
            Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.RetweetsOfMe(Twitterizer.OAuthTokens)">
            <summary>
            Returns the 20 most recent tweets of the authenticated user that have been retweeted by others.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.RetweetedByMe(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Returns the 20 most recent retweets posted by the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.RetweetedByMe(Twitterizer.OAuthTokens)">
            <summary>
            Returns the 20 most recent retweets posted by the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.RetweetedToMe(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Returns the 20 most recent retweets posted by the authenticating user's friends.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.RetweetedToMe(Twitterizer.OAuthTokens)">
            <summary>
            Returns the 20 most recent retweets posted by the authenticating user's friends.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.Mentions(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Returns the 20 most recent mentions (status containing @username) for the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTimeline.Mentions(Twitterizer.OAuthTokens)">
            <summary>
            Returns the 20 most recent mentions (status containing @username) for the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterSpam.ReportUser(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Blocks the user and reports them for spam/abuse.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
            <returns>The user details.</returns>
        </member>
        <member name="M:Twitterizer.TwitterSpam.ReportUser(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Blocks the user and reports them for spam/abuse.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userId">The user id.</param>
            <returns>The user details.</returns>
        </member>
        <member name="M:Twitterizer.TwitterSpam.ReportUser(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Blocks the user and reports them for spam/abuse.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="screenName">The user's screen name.</param>
            <param name="options">The options.</param>
            <returns>The user details.</returns>
        </member>
        <member name="M:Twitterizer.TwitterSpam.ReportUser(Twitterizer.OAuthTokens,System.String)">
            <summary>
            Blocks the user and reports them for spam/abuse.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="screenName">The user's screen name.</param>
            <returns>The user details.</returns>
        </member>
        <member name="M:Twitterizer.Commands.ReportSpamCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ReportSpamCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userId">The user id.</param>
            <param name="screenName">Name of the screen.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.ReportSpamCommand.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.ReportSpamCommand.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.Commands.ReportSpamCommand.ScreenName">
            <summary>
            Gets or sets the name of the screen.
            </summary>
            <value>The name of the screen.</value>
        </member>
        <member name="T:Twitterizer.TwitterSavedSearch">
            <summary>
            The TwitterSavedSearch class. Provides static methods for manipulating saved searches tweets.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearch.Create(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Creates the saved search specified in the query parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="query">The query.</param>
            <param name="options">The options.</param>
            <returns>The saved search when successful.</returns>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearch.Create(Twitterizer.OAuthTokens,System.String)">
            <summary>
            Creates the saved search specified in the query parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="query">The query.</param>
            <returns>The saved search when successful.</returns>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearch.Delete(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Deletes the saved search specified in the ID parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="savedsearchId">The saved search id.</param>
            <param name="options">The options.</param>
            <returns>The deleted saved search in the requested format when successful.</returns>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearch.Delete(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Deletes the saved search specified in the ID parameter as the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="savedsearchId">The saved search id.</param>
            <returns>
            The deleted saved search in the requested format when successful
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearch.SavedSearches(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Returns the the authenticating user's saved search queries in the requested format.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>The saved searches</returns>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearch.SavedSearches(Twitterizer.OAuthTokens)">
            <summary>
            Returns the the authenticating user's saved search queries in the requested format.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>The saved searches</returns>
        </member>
        <member name="M:Twitterizer.TwitterSavedSearch.SavedSearches(Twitterizer.OptionalProperties)">
            <summary>
            Returns the the authenticating user's saved search queries in the requested format.
            </summary>
            <param name="options">The options.</param>
            <returns>The saved searches</returns>
        </member>
        <member name="P:Twitterizer.TwitterSavedSearch.Id">
            <summary>
            Gets or sets the Id.
            </summary>
            <value>The Id of the saved search.</value>
        </member>
        <member name="P:Twitterizer.TwitterSavedSearch.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name of the saved search.</value>
        </member>
        <member name="P:Twitterizer.TwitterSavedSearch.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="P:Twitterizer.TwitterSavedSearch.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:Twitterizer.TwitterSavedSearch.CreatedAt">
            <summary>
            Gets or sets the created at date time.
            </summary>
            <value>The created at.</value>
        </member>
        <member name="T:Twitterizer.TwitterGeoShapeType">
            <summary>
            Lists the possible types of geographic boundaries.
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterGeoShapeType.Point">
            <summary>
            A single point. Expect one coordinate.
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterGeoShapeType.LineString">
            <summary>
            A line, or multiple lines joined end-to-end.
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterGeoShapeType.Polygon">
            <summary>
            A polygon-shaped area.
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterGeoShapeType.CircleByCenterPoint">
            <summary>
            A circle represented by a single point (the center) and the radius.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterGeo">
            <summary>
            Represents a geological area
            </summary>
        </member>
        <member name="P:Twitterizer.TwitterGeo.ShapeType">
            <summary>
            Gets or sets the type of the shape.
            </summary>
            <value>The type of the shape.</value>
        </member>
        <member name="P:Twitterizer.TwitterGeo.Coordinates">
            <summary>
            Gets or sets the coordinates.
            </summary>
            <value>The coordinates.</value>
        </member>
        <member name="T:Twitterizer.Commands.FollowersIdsCommand">
            <summary>
            Returns the members of the specified list.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FollowersIdsCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.UsersIdsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.GetListsCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.FollowersIdsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FollowersIdsCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.TwitterizerDateConverter">
            <summary>
            Converts date strings returned by the Twitter API into <see cref="T:System.DateTime"/>
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterizerDateConverter.DateFormat">
            <summary>
            The date pattern for most dates returned by the API
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterizerDateConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns>The parsed value as a DateTime, or null.</returns>
        </member>
        <member name="M:Twitterizer.TwitterizerDateConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="T:Twitterizer.TwitterStatus">
            <summary>
      The <c>TwitterStatus</c> class represents a twitter status (also refered to as a tweet) and provides methods for interacting with status-centric API methods.
    </summary>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Update(Twitterizer.OAuthTokens,System.String)">
            <summary>
            Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="text">The status text.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> object of the newly created status.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Update(Twitterizer.OAuthTokens,System.String,Twitterizer.StatusUpdateOptions)">
            <summary>
            Updates the authenticating user's status. A status update with text identical to the authenticating user's text identical to the authenticating user's current status will be ignored to prevent duplicates.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="text">The status text.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatus"/> object of the newly created status.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Delete(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Deletes the specified status.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <param name="id">The status id.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatus"/> object of the deleted status.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Delete(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Deletes the specified status.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <param name="id">The status id.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> object of the deleted status.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Show(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Returns a single status, with user information, specified by the id parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Show(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Returns a single status, with user information, specified by the id parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Show(System.Decimal)">
            <summary>
            Returns a single status, with user information, specified by the id parameter.
            </summary>
            <param name="statusId">The status id.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Retweet(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Retweets a tweet. Requires the id parameter of the tweet you are retweeting. (say that 5 times fast)
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> representing the newly created tweet.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Retweet(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Retweets a tweet. Requires the id parameter of the tweet you are retweeting. (say that 5 times fast)
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> representing the newly created tweet.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Retweets(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.RetweetsOptions)">
            <summary>
            Returns up to 100 of the first retweets of a given tweet.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Retweets(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Returns up to 100 of the first retweets of a given tweet.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Retweet(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Retweets a tweet. Requires the id parameter of the tweet you are retweeting. (say that 5 times fast)
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatus"/> representing the newly created tweet.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Retweet(Twitterizer.OAuthTokens)">
            <summary>
            Retweets a tweet. Requires the id parameter of the tweet you are retweeting. (say that 5 times fast)
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatus"/> representing the newly created tweet.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Delete(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Deletes the status.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatus"/> object of the deleted status.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.Delete(Twitterizer.OAuthTokens)">
            <summary>
            Deletes the status.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatus"/> object of the deleted status.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.RelatedResultsShow(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Shows Related Results of a tweet. Requires the id parameter of the tweet you are getting results for.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> representing the newly created tweet.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatus.RelatedResultsShow(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Shows Related Results of a tweet. Requires the id parameter of the tweet you are getting results for.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterStatus"/> representing the newly created tweet.</returns>
        </member>
        <member name="P:Twitterizer.TwitterStatus.Id">
            <summary>
            Gets or sets the status id.
            </summary>
            <value>The status id.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.IsTruncated">
            <summary>
            Gets or sets a value indicating whether this status message is truncated.
            </summary>
            <value>
            <c>true</c> if this status message is truncated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.CreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.InReplyToScreenName">
            <summary>
            Gets or sets the screenName the status is in reply to.
            </summary>
            <value>The screenName.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.InReplyToUserId">
            <summary>
            Gets or sets the user id the status is in reply to.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.InReplyToStatusId">
            <summary>
            Gets or sets the status id the status is in reply to.
            </summary>
            <value>The status id.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.IsFavorited">
            <summary>
            Gets or sets a value indicating whether the authenticated user has favorited this status.
            </summary>
            <value>
            <c>true</c> if this instance is favorited; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.Text">
            <summary>
            Gets or sets the text of the status.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.User">
            <summary>
            Gets or sets the user.
            </summary>
            <value>The user that posted this status.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.RetweetedStatus">
            <summary>
            Gets or sets the retweeted status.
            </summary>
            <value>The retweeted status.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.Place">
            <summary>
            Gets or sets the place.
            </summary>
            <value>The place.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.Geo">
            <summary>
            Gets or sets the geo location data.
            </summary>
            <value>The geo location data.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.Entities">
            <summary>
            Gets or sets the entities.
            </summary>
            <value>The entities.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.RetweetCountString">
            <summary>
            Gets or sets the retweet count string.
            </summary>
            <value>The retweet count.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.RetweetCount">
            <summary>
            Gets the retweet count.
            </summary>
            <value>The retweet count.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.RetweetCountPlus">
            <summary>
            Gets a value indicating that the number of retweets exceeds the reported value in RetweetCount. For example, "more than 100"
            </summary>
            <value>The retweet count plus indicator.</value>
        </member>
        <member name="P:Twitterizer.TwitterStatus.Retweeted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Twitterizer.TwitterStatus"/> is retweeted.
            </summary>
            <value><c>true</c> if retweeted; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.TwitterSearchResult">
            <summary>
            The Twitter Search Result class.
            </summary>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.ProfileImageLocation">
            <summary>
            Gets or sets the profile image URL.
            </summary>
            <value>The profile image URL.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.CreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.FromUserScreenName">
            <summary>
            Gets or sets the name of from user screen.
            </summary>
            <value>The name of from user screen.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.FromUserId">
            <summary>
            Gets or sets from user id.
            </summary>
            <value>From user id.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.ToUserScreenName">
            <summary>
            Gets or sets the name of to user screen.
            </summary>
            <value>The name of to user screen.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.ToUserId">
            <summary>
            Gets or sets to user id.
            </summary>
            <value>To user id.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.Text">
            <summary>
            Gets or sets the status text.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.Id">
            <summary>
            Gets or sets the status id.
            </summary>
            <value>The status id.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.Geo">
            <summary>
            Gets or sets the geo location associated with the result.
            </summary>
            <value>The geo location data.</value>
        </member>
        <member name="P:Twitterizer.TwitterSearchResult.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="T:Twitterizer.Commands.UserSearchCommand">
            <summary>
            The User Search Command class.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.UserSearchCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.UserSearchOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.UserSearchCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="query">The query.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.UserSearchCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.UserSearchCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="P:Twitterizer.Commands.UserSearchCommand.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="T:Twitterizer.TimelineOptions">
            <summary>
            The timeline options class. Provides optional parameters for timeline methods.
            </summary>
        </member>
        <member name="M:Twitterizer.TimelineOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.TimelineOptions"/> class.
            </summary>
        </member>
        <member name="M:Twitterizer.TimelineOptions.Init``1(Twitterizer.Core.TwitterCommand{``0},Twitterizer.TimelineOptions)">
            <summary>
            Initializes the specified command.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="command">The command.</param>
            <param name="options">The options.</param>
        </member>
        <member name="P:Twitterizer.TimelineOptions.SinceStatusId">
            <summary>
            Gets or sets the minimum (earliest) status id to request.
            </summary>
            <value>The since id.</value>
        </member>
        <member name="P:Twitterizer.TimelineOptions.MaxStatusId">
            <summary>
            Gets or sets the max (latest) status id to request.
            </summary>
            <value>The max id.</value>
        </member>
        <member name="P:Twitterizer.TimelineOptions.Count">
            <summary>
            Gets or sets the number of messages to request.
            </summary>
            <value>The number of messages to request.</value>
        </member>
        <member name="P:Twitterizer.TimelineOptions.Page">
            <summary>
            Gets or sets the page number to request.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="P:Twitterizer.TimelineOptions.SkipUser">
            <summary>
            Gets or sets a value indicating whether user objects should contain only Id values.
            </summary>
            <value><c>true</c> if user objects should contain only Id values; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Twitterizer.TimelineOptions.IncludeRetweets">
            <summary>
            Gets or sets a value indicating whether [include retweets].
            </summary>
            <value><c>true</c> if [include retweets]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.TwitterFriendship">
            <summary>
            Provides interaction with the Twitter API to obtain and manage relationships between users.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Followers(Twitterizer.OAuthTokens,Twitterizer.FollowersOptions)">
            <summary>
            Returns the authenticating user's followers, each with current status inline.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Followers(Twitterizer.OAuthTokens)">
            <summary>
            Returns the authenticating user's followers, each with current status inline.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Followers(Twitterizer.FollowersOptions)">
            <summary>
            Returns the authenticating user's followers, each with current status inline.
            </summary>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Friends(Twitterizer.OAuthTokens,Twitterizer.FriendsOptions)">
            <summary>
            Returns a user's friends, each with current status inline. They are ordered by the order in which the user followed them, most recently followed first, 100 at a time.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterUserCollection"/> instance.
            </returns>
            <remarks>Please note that the result set isn't guaranteed to be 100 every time as suspended users will be filtered out.</remarks>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Friends(Twitterizer.OAuthTokens)">
            <summary>
            Returns a user's friends, each with current status inline. They are ordered by the order in which the user followed them, most recently followed first, 100 at a time.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterUserCollection"/> instance.
            </returns>
            <remarks>Please note that the result set isn't guaranteed to be 100 every time as suspended users will be filtered out.</remarks>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Friends(Twitterizer.FriendsOptions)">
            <summary>
            Returns a user's friends, each with current status inline. They are ordered by the order in which the user followed them, most recently followed first, 100 at a time.
            </summary>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterUserCollection"/> instance.
            </returns>
            <remarks>Please note that the result set isn't guaranteed to be 100 every time as suspended users will be filtered out.</remarks>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Create(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Allows the authenticating users to follow the user specified in the userID parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userId">The user id.</param>        
            <returns>
            Returns the followed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Create(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.CreateFriendshipOptions)">
            <summary>
            Allows the authenticating users to follow the user specified in the userID parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
            <returns>
            Returns the followed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Create(Twitterizer.OAuthTokens,System.String)">
            <summary>
            Allows the authenticating users to follow the user specified in the userName parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userName">The user name.</param>
            <returns>
            Returns the followed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Create(Twitterizer.OAuthTokens,System.String,Twitterizer.CreateFriendshipOptions)">
            <summary>
            Allows the authenticating users to follow the user specified in the userName parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userName">The user name.</param>
            <param name="options">The options.</param>
            <returns>
            Returns the followed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Delete(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Allows the authenticating users to unfollow the user specified in the ID parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userId">The user id.</param>
            <returns>
            Returns the unfollowed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Delete(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Allows the authenticating users to unfollow the user specified in the ID parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
            <returns>
            Returns the unfollowed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Delete(Twitterizer.OAuthTokens,System.String)">
            <summary>
            Allows the authenticating users to unfollow the user specified in the ID parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userName">The username.</param>
            <returns>
            Returns the unfollowed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Delete(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Allows the authenticating users to unfollow the user specified in the ID parameter.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userName">The username.</param>
            <param name="options">The options.</param>
            <returns>
            Returns the unfollowed user in the requested format when successful.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="targetUserId">The target user id.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="targetUserId">The target user id.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.Decimal,System.Decimal)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="sourceUseId">The source user id.</param>
            <param name="targetUserId">The target user id.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.Decimal,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="sourceUseId">The source user id.</param>
            <param name="targetUserId">The target user id.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.String)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="targetUserName">The target user name.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="targetUserName">The target user name.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.String,System.String)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="sourceUserName">The source user name.</param>
            <param name="targetUserName">The target user name.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="sourceUserName">The source user name.</param>
            <param name="targetUserName">The target user name.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterRelationship"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(System.Decimal,System.Decimal)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="sourceUseId">The first user id.</param>
            <param name="targetUserId">The second user id.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterRelationship"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.Show(System.String,System.String)">
            <summary>
            Returns detailed information about the relationship between two users.
            </summary>
            <param name="sourceUserName">The first username.</param>
            <param name="targetUserName">The second username.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterRelationship"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.FriendsIds(Twitterizer.OAuthTokens,Twitterizer.UsersIdsOptions)">
            <summary>
            Returns the numeric IDs for every user the specified user is friends with.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.FriendsIds(Twitterizer.OAuthTokens)">
            <summary>
            Returns the numeric IDs for every user the specified user is friends with.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.FollowersIds(Twitterizer.OAuthTokens,Twitterizer.UsersIdsOptions)">
            <summary>
            Returns the numeric IDs for every user the specified user is following.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterFriendship.FollowersIds(Twitterizer.OAuthTokens)">
            <summary>
            Returns the numeric IDs for every user the specified user is following.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="T:Twitterizer.UsersIdsOptions">
            <summary>
            The Create Friendship Options class
            </summary>
        </member>
        <member name="P:Twitterizer.UsersIdsOptions.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:Twitterizer.UsersIdsOptions.UserId">
            <summary>
            Gets or sets the ID of the user for whom to request a list of followers.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.UsersIdsOptions.ScreenName">
            <summary>
            Gets or sets the screen name of the user for whom to request a list of followers. 
            </summary>
            <value>The name of the screen.</value>
        </member>
        <member name="T:Twitterizer.Commands.SendDirectMessageCommand">
            <summary>
            The Send Direct Message Command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.SendDirectMessageCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.SendDirectMessageCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="text">The message text.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.SendDirectMessageCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.SendDirectMessageCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="text">The message text.</param>
            <param name="userName">Name of the user.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.SendDirectMessageCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.SendDirectMessageCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="text">The message text.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.SendDirectMessageCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.SendDirectMessageCommand.Text">
            <summary>
            Gets or sets the status text.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="P:Twitterizer.Commands.SendDirectMessageCommand.RecipientUserId">
            <summary>
            Gets or sets the recipient user id.
            </summary>
            <value>The recipient user id.</value>
        </member>
        <member name="P:Twitterizer.Commands.SendDirectMessageCommand.RecipientUserName">
            <summary>
            Gets or sets the name of the recipient user.
            </summary>
            <value>The name of the recipient user.</value>
        </member>
        <member name="T:Twitterizer.UpdateProfileColorsOptions">
            <summary>
            Optional properties for the <see cref="M:Twitterizer.TwitterUser.UpdateProfileColors(Twitterizer.OAuthTokens,Twitterizer.UpdateProfileColorsOptions)"/> method.
            </summary>
        </member>
        <member name="P:Twitterizer.UpdateProfileColorsOptions.BackgroundColor">
            <summary>
            Gets or sets the color of the background.
            </summary>
            <value>The color of the background.</value>
        </member>
        <member name="P:Twitterizer.UpdateProfileColorsOptions.TextColor">
            <summary>
            Gets or sets the color of the text.
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:Twitterizer.UpdateProfileColorsOptions.LinkColor">
            <summary>
            Gets or sets the color of the link.
            </summary>
            <value>The color of the link.</value>
        </member>
        <member name="P:Twitterizer.UpdateProfileColorsOptions.SidebarFillColor">
            <summary>
            Gets or sets the color of the sidebar fill.
            </summary>
            <value>The color of the sidebar fill.</value>
        </member>
        <member name="P:Twitterizer.UpdateProfileColorsOptions.SidebarBorderColor">
            <summary>
            Gets or sets the color of the sidebar border.
            </summary>
            <value>The color of the sidebar border.</value>
        </member>
        <member name="T:Twitterizer.Commands.ShowStatusCommand">
            <summary>
            The Show Status Command
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.ShowStatusCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ShowStatusCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.ShowStatusCommand.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.MentionsCommand">
            <summary>
            The Mentions Command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.MentionsCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.MentionsCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.MentionsCommand.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.MentionsCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.Commands.HomeTimelineCommand">
            <summary>
            The Home Timeline Command
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.HomeTimelineCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.HomeTimelineCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Commands.HomeTimelineCommand.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.HomeTimelineCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned command object.</returns>
        </member>
        <member name="T:Twitterizer.Commands.CreateSavedSearchCommand">
            <summary>
            The Create Saved Search Command class. Creates the Saved Search with the query provided as the authenticating user. Returns the saved search when successful.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.CreateSavedSearchCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.CreateSavedSearchCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="query">The query.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.CreateSavedSearchCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.CreateSavedSearchCommand.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="T:Twitterizer.Commands.UpdateProfileColorsCommand">
            <summary>
            Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.UpdateProfileColorsCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.UpdateProfileColorsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.UpdateProfileColorsCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.UpdateProfileColorsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterAccount">
            <summary>
            Provides methods to request and modify details of an authorized user's account details.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterAccount.VerifyCredentials(Twitterizer.OAuthTokens,Twitterizer.VerifyCredentialsOptions)">
            <summary>
            Verifies the user's credentials.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.TwitterAccount.VerifyCredentials(Twitterizer.OAuthTokens)">
            <summary>
            Verifies the user's credentials.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns></returns>
        </member>
        <member name="T:Twitterizer.TwitterUser">
            <summary>
      The <c>TwitterUser</c> class represents a twitter user account and provides methods for interacting with user-centric API methods.
    </summary>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="tokens">The tokens.</param><param name="id">The user id.</param><param name="options">Optional parameters for runtime configuration settings.</param><example>
      <code lang="cs">
        // Declare the user's id variable
        decimal userId = 1;
        
        // Declare the options object for configuration settings
        OptionalProperties options = new OptionalProperties();

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(tokens, userId, options);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim userId As decimal = 1

        '-- Declare the options object for configuration settings
        Dim options As new OptionalProperties()

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(tokens, userId, options)
      </code>
      <seealso cref="T:Twitterizer.OAuthTokens"/>
      <seealso cref="T:Twitterizer.OptionalProperties"/>
    </example>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="id">The user id.</param><param name="options">Optional parameters for runtime configuration settings.</param><example>
      <code lang="cs">
        // Declare the user's id variable
        decimal userId = 1;

        // Declare the options object for configuration settings
        OptionalProperties options = new OptionalProperties();

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(userId, options);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim userId As decimal = 1

        '-- Declare the options object for configuration settings
        Dim options As new OptionalProperties()

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(userId, options)
      </code>
    </example><seealso cref="T:Twitterizer.OptionalProperties"/>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(Twitterizer.OAuthTokens,System.Decimal)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="tokens">The tokens.</param><param name="id">The user id.</param><example>
      <code lang="cs">
        // Declare the user's id variable
        decimal userId = 1;

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(tokens, userId);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim userId As decimal = 1

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(tokens, userId)
      </code>
    </example><seealso cref="T:Twitterizer.OAuthTokens"/>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(System.Decimal)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="id">The user id.</param><example>
      <code lang="cs">
        // Declare the user's id variable
        decimal userId = 1;

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(userId);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim userId As decimal = 1

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(userId)
      </code>
    </example>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="tokens">The tokens.</param><param name="username">The user name.</param><param name="options">The options.</param><example>
      <code lang="cs">
        // Declare the username variable
        string userName = "twit_er_izer";

        // Declare the options object for configuration settings
        OptionalProperties options = new OptionalProperties();

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(tokens, userName, options);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim UserName As String = "twit_er_izer"

        '-- Declare the options object for configuration settings
        Dim options As new OptionalProperties()

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(tokens, UserName, options)
      </code>
      <seealso cref="T:Twitterizer.OAuthTokens"/>
      <seealso cref="T:Twitterizer.OptionalProperties"/>
    </example>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(System.String,Twitterizer.OptionalProperties)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="username">The user name.</param><param name="options">The options.</param><example>
      <code lang="cs">
        // Declare the username variable
        string userName = "twit_er_izer";

        // Declare the options object for configuration settings
        OptionalProperties options = new OptionalProperties();

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(userName, options);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim UserName As String = "twit_er_izer"

        '-- Declare the options object for configuration settings
        Dim options As new OptionalProperties()

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(UserName, options)
      </code>
      <seealso cref="T:Twitterizer.OptionalProperties"/>
    </example>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(Twitterizer.OAuthTokens,System.String)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="tokens">The tokens.</param><param name="username">The user name.</param><example>
      <code lang="cs">
        // Declare the username variable
        string userName = "twit_er_izer";

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(tokens, userName);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim UserName As String = "twit_er_izer"

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(tokens, UserName, options)
      </code>
      <seealso cref="T:Twitterizer.OAuthTokens"/>
    </example>
        </member>
        <member name="M:Twitterizer.TwitterUser.Show(System.String)">
            <summary>
      Returns extended information of a given user, specified by ID or screen name as per the required id parameter. The author's most recent status will be returned inline.
    </summary><returns>
      A new instance of the <see cref="T:Twitterizer.TwitterUser"/> class.
    </returns><remarks>
      This method interacts with the users/show API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/show">http://dev.twitter.com/doc/get/users/show</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception>
            <param name="username">The user name.</param><example>
      <code lang="cs">
        // Declare the username variable
        string userName = "twit_er_izer";

        // Declare our user variable and fetch the user's details
        TwitterResponse&lt;TwitterUser&gt; user = TwitterUser.Show(userName);
      </code>
      <code lang="vb">
        '-- Declare the user's id variable
        Dim UserName As String = "twit_er_izer"

        '-- Declare our user variable and fetch the user's details
        Dim user As TwitterResponse(Of TwitterUser) = TwitterUser.Show(UserName)
      </code>
    </example>
        </member>
        <member name="M:Twitterizer.TwitterUser.Search(Twitterizer.OAuthTokens,System.String,Twitterizer.UserSearchOptions)">
            <summary>
      Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API.
    </summary><remarks>
      This method interacts with the users/search API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/search">http://dev.twitter.com/doc/get/users/search</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception><returns>
      A <see cref="T:Twitterizer.TwitterUserCollection"/> instance.
    </returns>
            <param name="tokens">The OAuth access tokens.</param><param name="query">The search query.</param><param name="options">Optional parameters.</param><example>
      <code lang="cs">
        // Declare the search query
        string query = "from:twit_er_izer @twitterapi";

        // Declare the optional parameter object
        UserSearchOptions options = new UserSearchOptions();
        options.NumberPerPage = 10;
        options.Page = 2;

        // Perform the search
        TwitterResponse&lt;TwitterUserCollection&gt; searchResults = TwitterUser.Search(oauthTokens, query, options);
      </code>
      <code lang="vb">
        '-- Declare the search query
        Dim Query As String = "from:twit_er_izer @twitterapi"

        '-- Declare the optional parameter object
        Dim options As new UserSearchOptions()
        options.NumberPerPage = 10
        options.Page = 2

        '-- Perform the search
        Dim searchResults As TwitterResponse(Of TwitterUserCollection) = TwitterUser.Search(oauthTokens, query, options)
      </code>
    </example><seealso cref="T:Twitterizer.UserSearchOptions"/><seealso cref="T:Twitterizer.OAuthTokens"/>
        </member>
        <member name="M:Twitterizer.TwitterUser.Search(Twitterizer.OAuthTokens,System.String)">
            <summary>
      Run a search for users similar to the Find People button on Twitter.com; the same results returned by people search on Twitter.com will be returned by using this API.
    </summary><remarks>
      This method interacts with the users/search API endpoint. Documentation can be found here: <a href="http://dev.twitter.com/doc/get/users/search">http://dev.twitter.com/doc/get/users/search</a>
    </remarks><exception cref="T:System.ArgumentNullException">Indicates that a required argument was not supplied.</exception><exception cref="T:System.ArgumentException">Indicates that an argument supplied was not valid.</exception><exception cref="!:Twitterizer.CommandValidationException&lt;T&gt;">Indicates that a command failed pre-execution validation.</exception><returns>
      A <see cref="T:Twitterizer.TwitterUserCollection"/> instance.
    </returns>
            <param name="tokens">The OAuth access tokens.</param><param name="query">The search query.</param><example>
      <code lang="cs">
        // Declare the search query
        string query = "from:twit_er_izer @twitterapi";

        // Perform the search
        TwitterResponse&lt;TwitterUserCollection&gt; searchResults = TwitterUser.Search(oauthTokens, query);
      </code>
      <code lang="vb">
        '-- Declare the search query
        Dim Query As String = "from:twit_er_izer @twitterapi"

        '-- Perform the search
        Dim searchResults As TwitterResponse(Of TwitterUserCollection) = TwitterUser.Search(oauthTokens, query)
      </code>
    </example><seealso cref="T:Twitterizer.OAuthTokens"/>
        </member>
        <member name="M:Twitterizer.TwitterUser.Lookup(Twitterizer.OAuthTokens,Twitterizer.LookupUsersOptions)">
            <summary>
            Return up to 100 users worth of extended information, specified by either ID, screen name, or combination of the two.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.TwitterUser.UpdateProfileColors(Twitterizer.OAuthTokens,Twitterizer.UpdateProfileColorsOptions)">
            <summary>
            Sets one or more hex values that control the color scheme of the authenticating user's profile page on twitter.com
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            The user, with updated data, as a <see cref="T:Twitterizer.TwitterUser"/>
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterUser.UpdateProfileImage(Twitterizer.OAuthTokens,Twitterizer.TwitterImage,Twitterizer.OptionalProperties)">
            <summary>
            Updates the authenticating user's profile image. 
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="image">The avatar image for the profile. Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down.</param>
            <param name="options">The options.</param>
            <returns>
            The user, with updated data, as a <see cref="T:Twitterizer.TwitterUser"/>
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterUser.UpdateProfileImage(Twitterizer.OAuthTokens,Twitterizer.TwitterImage)">
            <summary>
            Updates the authenticating user's profile image.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="image">The avatar image for the profile. Must be a valid GIF, JPG, or PNG image of less than 700 kilobytes in size. Images with width larger than 500 pixels will be scaled down.</param>
            <returns>
            The user, with updated data, as a <see cref="T:Twitterizer.TwitterUser"/>
            </returns>
        </member>
        <member name="P:Twitterizer.TwitterUser.Id">
            <summary>
            Gets or sets the User ID.
            </summary>
            <value>The User ID.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.Name">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.Location">
            <summary>
            Gets or sets the location.
            </summary>
            <value>The location.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.Status">
            <summary>
            Gets or sets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.CreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.TimeZone">
            <summary>
            Gets or sets the time zone.
            </summary>
            <value>The time zone.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.NumberOfFollowers">
            <summary>
            Gets or sets the number of followers.
            </summary>
            <value>The number of followers.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.NumberOfStatuses">
            <summary>
            Gets or sets the number of statuses.
            </summary>
            <value>The number of statuses.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.NumberOfFriends">
            <summary>
            Gets or sets the number of friends.
            </summary>
            <value>The number of friends.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.IsContributorsEnabled">
            <summary>
            Gets or sets a value indicating whether the user has enabled contributors access to his or her account.
            </summary>
            <value>The is contributors enabled value.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.DoesReceiveNotifications">
            <summary>
            Gets or sets a value indicating whether the user receives notifications.
            </summary>
            <value>
            <c>true</c> if the user receives notifications; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ScreenName">
            <summary>
            Gets or sets the screenname.
            </summary>
            <value>The screenname.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.IsFollowing">
            <summary>
            Gets or sets a value indicating whether the authenticated user is following this user.
            </summary>
            <value>
            <c>true</c> if the authenticated user is following this user; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.TwitterUser.IsFollowedBy">
            <summary>
            Gets or sets the a value indicating whether the authenticated user is followed by this user.
            </summary>
            <value>The is followed by.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.NumberOfFavorites">
            <summary>
            Gets or sets the number of favorites.
            </summary>
            <value>The number of favorites.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.IsProtected">
            <summary>
            Gets or sets a value indicating whether this user is protected.
            </summary>
            <value>
            <c>true</c> if this user is protected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.TwitterUser.IsGeoEnabled">
            <summary>
            Gets or sets a value indicating whether this user is geo enabled.
            </summary>
            <value>
            <c>true</c> if this user is geo enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.TwitterUser.TimeZoneOffset">
            <summary>
            Gets or sets the time zone offset.
            </summary>
            <value>The time zone offset.</value>
            <remarks>Also called the Coordinated Universal Time (UTC) offset.</remarks>
        </member>
        <member name="P:Twitterizer.TwitterUser.Website">
            <summary>
            Gets or sets the user's website.
            </summary>
            <value>The website address.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ListedCount">
            <summary>
            Gets or sets the listed count.
            </summary>
            <value>The listed count.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.FollowRequestSent">
            <summary>
            Gets or sets a value indicating whether [follow request sent].
            </summary>
            <value><c>true</c> if [follow request sent]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.Verified">
            <summary>
            Gets or sets a value indicating whether the user is verified.
            </summary>
            <value><c>true</c> if the user is verified; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileBackgroundColorString">
            <summary>
            Gets or sets the color of the profile background.
            </summary>
            <value>The color of the profile background.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileBackgroundColor">
            <summary>
            Gets the color of the profile background.
            </summary>
            <value>The color of the profile background.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.IsProfileBackgroundTiled">
            <summary>
            Gets or sets a value indicating whether this user's profile background image is tiled.
            </summary>
            <value>
            <c>true</c> if this user's profile background image is tiled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileLinkColorString">
            <summary>
            Gets or sets the color of the profile link.
            </summary>
            <value>The color of the profile link.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileLinkColor">
            <summary>
            Gets the color of the profile link.
            </summary>
            <value>The color of the profile link.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileBackgroundImageLocation">
            <summary>
            Gets or sets the profile background image location.
            </summary>
            <value>The profile background image location.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileTextColorString">
            <summary>
            Gets or sets the color of the profile text.
            </summary>
            <value>The color of the profile text.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileTextColor">
            <summary>
            Gets the color of the profile text.
            </summary>
            <value>The color of the profile text.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileImageLocation">
            <summary>
            Gets or sets the profile image location.
            </summary>
            <value>The profile image location.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileSidebarBorderColorString">
            <summary>
            Gets or sets the color of the profile sidebar border.
            </summary>
            <value>The color of the profile sidebar border.</value>
        </member>
        <member name="P:Twitterizer.TwitterUser.ProfileSidebarBorderColor">
            <summary>
            Gets the color of the profile sidebar border.
            </summary>
            <value>The color of the profile sidebar border.</value>
        </member>
        <member name="T:Twitterizer.Commands.SavedSearchesCommand">
            <summary>
            The Saved Searches Command class. Returns the saved searches collection when successful.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.SavedSearchesCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.SavedSearchesCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.SavedSearchesCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.CheckListMembershipCommand">
            <summary>
            Check if a user is a member of the specified list.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.CheckListMembershipCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.CheckListMembershipCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="ownerUsername">The owner username.</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.CheckListMembershipCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterResponse`1">
            <summary>
            The twitter response class provides details of the response from an api call to the twitter api.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.ResponseObject">
            <summary>
            Gets or sets the object that represents the data returned by the request to Twitter.
            </summary>
            <value>The response object.</value>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.Result">
            <summary>
            Gets or sets the result of the request.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.RequestUrl">
            <summary>
            Gets or sets the request URL.
            </summary>
            <value>The request URL.</value>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.Content">
            <summary>
            Gets the raw json or xml response provided by Twitter.
            </summary>
            <value>The response body.</value>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.ErrorMessage">
            <summary>
            Gets or sets the error message returned by the Twitter.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.Tokens">
            <summary>
            Gets or sets the oauth tokens provided for the request.
            </summary>
            <value>The tokens.</value>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.ResponseCached">
            <summary>
            Gets or sets a value indicating whether the response was retrieved from a cache.
            </summary>
            <value><c>true</c> if [response cached]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Twitterizer.TwitterResponse`1.RateLimiting">
            <summary>
            Gets or sets the rate limiting details.
            </summary>
            <value>The rate limiting object.</value>
        </member>
        <member name="T:Twitterizer.TwitterStatusCollection">
            <summary>
            The TwitterStatusCollection class.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterStatusCollection.NextPage">
            <summary>
            Gets the next page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterStatusCollection.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.</returns>
        </member>
        <member name="P:Twitterizer.TwitterStatusCollection.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Twitterizer.OAuthTokenResponse">
            <summary>
            Values returned by Twitter when getting a request token or an access token.
            </summary>
        </member>
        <member name="P:Twitterizer.OAuthTokenResponse.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>The token.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokenResponse.TokenSecret">
            <summary>
            Gets or sets the token secret.
            </summary>
            <value>The token secret.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokenResponse.UserId">
            <summary>
            Gets or sets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokenResponse.ScreenName">
            <summary>
            Gets or sets the screenname.
            </summary>
            <value>The screenname.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokenResponse.VerificationString">
            <summary>
            Gets or sets the verification string.
            This is required when overriding the application's callback url.
            </summary>
            <value>The verification string.</value>
        </member>
        <member name="T:Twitterizer.Commands.ShowUserCommand">
            <summary>
            The Show User Command
            </summary>
            <remarks>http://dev.twitter.com/doc/get/users/show</remarks>
        </member>
        <member name="M:Twitterizer.Commands.ShowUserCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ShowUserCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="userId">The user id.</param>
            <param name="username">The username.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.ShowUserCommand.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.ShowUserCommand.UserId">
            <summary>
            Gets or sets the user ID.
            </summary>
            <value>The user ID.</value>
        </member>
        <member name="P:Twitterizer.Commands.ShowUserCommand.Username">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="T:Twitterizer.Entities.TwitterUrlEntity">
            <summary>
            Represents a pre-parsed url located within the body of a <see cref="P:Twitterizer.TwitterStatus.Text"/>.
            </summary>
        </member>
        <member name="T:Twitterizer.Entities.TwitterEntity">
            <summary>
            The base class for twitter entities that describe tweet text. 
            </summary>
        </member>
        <member name="M:Twitterizer.Entities.TwitterEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Entities.TwitterEntity"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.Entities.TwitterEntity.StartIndex">
            <summary>
            Gets or sets the start index.
            </summary>
            <value>The start index.</value>
        </member>
        <member name="P:Twitterizer.Entities.TwitterEntity.EndIndex">
            <summary>
            Gets or sets the end index.
            </summary>
            <value>The end index.</value>
        </member>
        <member name="M:Twitterizer.Entities.TwitterUrlEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Entities.TwitterUrlEntity"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.Entities.TwitterUrlEntity.Url">
            <summary>
            Gets or sets the URL parsed from the tweet text.
            </summary>
            <value>The parsed URL.</value>
        </member>
        <member name="T:Twitterizer.TwitterImageImageType">
            <summary>
            The image type that is being uploaded.
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterImageImageType.Jpeg">
            <summary>
            JPEG
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterImageImageType.Gif">
            <summary>
            GIF
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterImageImageType.PNG">
            <summary>
            PNG
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterImage">
            <summary>
            Represents an image for uploading. Used to upload new profile and background images.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterImage.GetMimeType">
            <summary>
            Gets the image's MIME type.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.TwitterImage.ReadFromDisk(System.String)">
            <summary>
            Reads a file from the disk and returns a <see cref="T:Twitterizer.TwitterImage"/> instance for uploading.
            </summary>
            <param name="filePath">The file path.</param>
            <returns></returns>
        </member>
        <member name="P:Twitterizer.TwitterImage.Filename">
            <summary>
            Gets or sets the filename.
            </summary>
            <value>The filename.</value>
        </member>
        <member name="P:Twitterizer.TwitterImage.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:Twitterizer.TwitterImage.ImageType">
            <summary>
            Gets or sets the type of the image.
            </summary>
            <value>The type of the image.</value>
        </member>
        <member name="T:Twitterizer.TwitterizerException">
            <summary>
            The Twitterizer Exception
            </summary>
            <seealso cref="T:System.Net.WebException"/>
        </member>
        <member name="M:Twitterizer.TwitterizerException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.TwitterizerException"/> class.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterizerException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.TwitterizerException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Twitterizer.TwitterizerException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.TwitterizerException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Twitterizer.TwitterizerException.ParseRateLimitHeaders(System.Net.WebResponse)">
            <summary>
            Parses the rate limit headers.
            </summary>
            <param name="response">The response.</param>
        </member>
        <member name="P:Twitterizer.TwitterizerException.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>The result.</value>
        </member>
        <member name="P:Twitterizer.TwitterizerException.ResponseBody">
            <summary>
            Gets or sets the response body.
            </summary>
            <value>The response body.</value>
        </member>
        <member name="P:Twitterizer.TwitterizerException.RateLimiting">
            <summary>
            Gets or sets the rate limits.
            </summary>
            <value>The rate limits.</value>
        </member>
        <member name="P:Twitterizer.TwitterizerException.ErrorDetails">
            <summary>
            Gets or sets the error details.
            </summary>
            <value>The error details.</value>
        </member>
        <member name="P:Twitterizer.TwitterizerException.Response">
            <summary>
            Gets the response that the remote host returned.
            </summary>
            <value></value>
            <returns>If a response is available from the Internet resource, a <see cref="T:System.Net.WebResponse"/> instance that contains the error response from an Internet resource; otherwise, null.</returns>
        </member>
        <member name="P:Twitterizer.TwitterizerException.BugReport">
            <summary>
            Gets the bug report.
            </summary>
            <value>The bug report.</value>
        </member>
        <member name="T:Twitterizer.TwitterListCollection">
            <summary>
            The twitter list collection class.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterListCollection.NextPage">
            <summary>
            Gets the next page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterListCollection"/> instance.</returns>
            <value>The next page.</value>
        </member>
        <member name="M:Twitterizer.TwitterListCollection.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterListCollection"/> instance.</returns>
            <value>The previous page.</value>
        </member>
        <member name="M:Twitterizer.TwitterListCollection.Deserialize(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Twitterizer.TwitterListCollection.NextCursor">
            <summary>
            Gets or sets the next cursor.
            </summary>
            <value>The next cursor.</value>
        </member>
        <member name="P:Twitterizer.TwitterListCollection.PreviousCursor">
            <summary>
            Gets or sets the previous cursor.
            </summary>
            <value>The previous cursor.</value>
        </member>
        <member name="P:Twitterizer.TwitterListCollection.Tokens">
            <summary>
            Gets or sets the request parameters.
            </summary>
            <value>The request parameters.</value>
        </member>
        <member name="P:Twitterizer.TwitterListCollection.RateLimiting">
            <summary>
            Gets or sets information about the user's rate usage.
            </summary>
            <value>The rate limiting object.</value>
        </member>
        <member name="P:Twitterizer.TwitterListCollection.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="T:Twitterizer.Commands.RetweetedToMeCommand">
            <summary>
            The Retweeted By Me Command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetedToMeCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RetweetedToMeCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RetweetedToMeCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetedToMeCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.Commands.FriendsTimelineCommand">
            <summary>
            The Friends Timeline Command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FriendsTimelineCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.FriendsTimelineCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.FriendsTimelineCommand.Init">
            <summary>
            Inits this instance.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FriendsTimelineCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.RetweetsOfMeOptions">
            <summary>
            The Retweets of Me options class. Provides optional parameters for the RetweetsOfMeCommand class.
            </summary>
        </member>
        <member name="P:Twitterizer.RetweetsOfMeOptions.SinceStatusId">
            <summary>
            Gets or sets the since status id.
            </summary>
            <value>The since status id.</value>
        </member>
        <member name="P:Twitterizer.RetweetsOfMeOptions.MaxStatusId">
            <summary>
            Gets or sets the max status id.
            </summary>
            <value>The max status id.</value>
        </member>
        <member name="P:Twitterizer.RetweetsOfMeOptions.Count">
            <summary>
            Gets or sets the count of tweets to return.
            </summary>
            <value>The count of tweets.</value>
        </member>
        <member name="P:Twitterizer.RetweetsOfMeOptions.Page">
            <summary>
            Gets or sets the page number to return.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="T:Twitterizer.UserTimelineOptions">
            <summary>
            The UserTimelineOptions class. Provides a payload for optional parameters of the <see cref="T:Twitterizer.Commands.UserTimelineCommand"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.UserTimelineOptions.UserId">
            <summary>
            Gets or sets the ID of the user for whom to request a list of followers.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.UserTimelineOptions.ScreenName">
            <summary>
            Gets or sets the screen name of the user for whom to request a list of followers. 
            </summary>
            <value>The name of the screen.</value>
        </member>
        <member name="T:Twitterizer.Commands.ReverseGeocodeCommand">
            <summary>
            The reverse geocode command class. Performs a reverse geocode lookup.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.ReverseGeocodeCommand.#ctor(System.Double,System.Double,Twitterizer.TwitterPlaceLookupOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ReverseGeocodeCommand"/> class.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.ReverseGeocodeCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.ReverseGeocodeCommand.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Twitterizer.Commands.ReverseGeocodeCommand.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="T:Twitterizer.CreateFriendshipOptions">
            <summary>
            The Create Friendship Options class
            </summary>
        </member>
        <member name="M:Twitterizer.CreateFriendshipOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.CreateFriendshipOptions"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.CreateFriendshipOptions.Follow">
            <summary>
            Gets or sets a value indicating whether to enable delivery of statuses from this user to the authenticated user's device
            </summary>
            <value><c>true</c> if follow; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.TwitterDirectMessageCollection">
            <summary>
            The Direct Message Collection class
            </summary>
        </member>
        <member name="T:Twitterizer.DirectMessagesOptions">
            <summary>
            The direct messages options class. Provides a payload for the <see cref="T:Twitterizer.Commands.DirectMessagesCommand"/> command.
            </summary>
        </member>
        <member name="M:Twitterizer.DirectMessagesOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.DirectMessagesOptions"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.DirectMessagesOptions.SinceStatusId">
            <summary>
            Gets or sets the minimum (earliest) status id to request.
            </summary>
            <value>The since id.</value>
        </member>
        <member name="P:Twitterizer.DirectMessagesOptions.MaxStatusId">
            <summary>
            Gets or sets the max (latest) status id to request.
            </summary>
            <value>The max id.</value>
        </member>
        <member name="P:Twitterizer.DirectMessagesOptions.Count">
            <summary>
            Gets or sets the number of messages to request.
            </summary>
            <value>The number of messages to request.</value>
        </member>
        <member name="P:Twitterizer.DirectMessagesOptions.Page">
            <summary>
            Gets or sets the page number to request.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="T:Twitterizer.TwitterResultType">
            <summary>
            The Twitter Result Type Enumeration
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterResultType.Mixed">
            <summary>
             In a future release this will become the default value. Include both popular and real time results in the response.
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterResultType.Recent">
            <summary>
            The current default value. Return only the most recent results in the response.
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterResultType.Popular">
            <summary>
            Return only the most popular results in the response.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterRelationship">
            <summary>
            The Twitter Relationship entity class
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterRelationship.source">
            <summary>
            The relationship source
            </summary>
        </member>
        <member name="F:Twitterizer.TwitterRelationship.target">
            <summary>
            The relationship target
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterRelationship.Delete(Twitterizer.OAuthTokens)">
            <summary>
            Allows the authenticating users to unfollow the user specified.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            Returns the unfollowed user in the requested format when successful. Returns a string describing the failure condition when unsuccessful.
            </returns>
        </member>
        <member name="P:Twitterizer.TwitterRelationship.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>The source.</value>
        </member>
        <member name="P:Twitterizer.TwitterRelationship.Target">
            <summary>
            Gets or sets the target.
            </summary>
            <value>The target.</value>
        </member>
        <member name="P:Twitterizer.TwitterRelationship.Relationship">
            <summary>
            Gets or sets the relationship.
            </summary>
            <value>The relationship.</value>
        </member>
        <member name="T:Twitterizer.RequestResult">
            <summary>
            Describes the result status of a request
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.Success">
            <summary>
            The request was completed successfully
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.FileNotFound">
            <summary>
            The URI requested is invalid or the resource requested, such as a user, does not exists.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.BadRequest">
            <summary>
            The request was invalid.  An accompanying error message will explain why.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.Unauthorized">
            <summary>
            Authentication credentials were missing or incorrect.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.NotAcceptable">
            <summary>
            Returned by the Search API when an invalid format is specified in the request.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.RateLimited">
            <summary>
            The authorized user, or client IP address, is being rate limited.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.TwitterIsDown">
            <summary>
            Twitter is currently down.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.TwitterIsOverloaded">
            <summary>
            Twitter is online, but is overloaded. Try again later.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.ConnectionFailure">
            <summary>
            The request failed due to a connection issue or timeout.
            </summary>
        </member>
        <member name="F:Twitterizer.RequestResult.Unknown">
            <summary>
            Something unexpected happened. See the error message for additional information.
            </summary>
        </member>
        <member name="T:Twitterizer.Core.NamespaceDoc">
            <summary>
            The <see cref="N:Twitterizer.Core"/> namespace contains abstract classes and interfaces
            </summary>  
        </member>
        <member name="T:Twitterizer.Commands.UserTimelineCommand">
            <summary>
            The user timeline command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.UserTimelineCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.UserTimelineOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.UserTimelineCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.UserTimelineCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.UserTimelineCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned command object.</returns>
        </member>
        <member name="T:Twitterizer.Commands.RetweetsOfMeCommand">
            <summary>
            The Retweets Of Me Command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetsOfMeCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.RetweetsOfMeOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RetweetsOfMeCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RetweetsOfMeCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetsOfMeCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.Commands.GetListsCommand">
            <summary>
            The get lists command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.GetListsCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.GetListsCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="username">The username.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.GetListsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.GetListsCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="P:Twitterizer.Commands.GetListsCommand.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="T:Twitterizer.Commands.AddListMemberCommand">
            <summary>
            Add a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.AddListMemberCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.AddListMemberCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="ownerUsername">The owner username.</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.AddListMemberCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.AddListMemberCommand.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="T:Twitterizer.TwitterBoundingBox">
            <summary>
            The twitter bounding box class. Represents a series of latitude and longitude coordinates that represents an area.
            </summary>
        </member>
        <member name="P:Twitterizer.TwitterBoundingBox.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type of bounding box.</value>
        </member>
        <member name="P:Twitterizer.TwitterBoundingBox.Coordinates">
            <summary>
            Gets or sets the coordinates.
            </summary>
            <value>The coordinates.</value>
        </member>
        <member name="T:Twitterizer.Commands.CreateFriendshipCommand">
            <summary>
            Creates a friendship between the authenticated user and another user
            </summary>
        </member>
        <member name="F:Twitterizer.Commands.CreateFriendshipCommand.Path">
            <summary>
            The base address to the API method.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.CreateFriendshipCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.CreateFriendshipOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.CreateFriendshipCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="userId">The userid.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Commands.CreateFriendshipCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.CreateFriendshipOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.CreateFriendshipCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="userName">Name of the user.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Commands.CreateFriendshipCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.CreateFriendshipCommand.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.Commands.CreateFriendshipCommand.UserName">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="T:Twitterizer.Commands.DirectMessagesCommand">
            <summary>
            The Direct Messages Command
            </summary>
        </member>
        <member name="F:Twitterizer.Commands.DirectMessagesCommand.Path">
            <summary>
            The base address to the API method.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DirectMessagesCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.DirectMessagesOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DirectMessagesCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.DirectMessagesCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.VerifyCredentialsOptions">
            <summary>
            The Verify Credentials Options class. Provides a payload for optional parameters for the Verify Credentials Command.
            </summary>
        </member>
        <member name="M:Twitterizer.VerifyCredentialsOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.VerifyCredentialsOptions"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.VerifyCredentialsOptions.IncludeEntities">
            <summary>
            Gets or sets a value indicating whether [include entities].
            </summary>
            <value><c>true</c> if [include entities]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.Commands.GetListCommand">
            <summary>
            The create list command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.GetListCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.GetListCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.GetListCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Entities.TwitterHashTagEntity">
            <summary>
            Represents a pre-parsed hash tag in a <see cref="P:Twitterizer.TwitterStatus.Text"/> value.
            </summary>
        </member>
        <member name="M:Twitterizer.Entities.TwitterHashTagEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Entities.TwitterHashTagEntity"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.Entities.TwitterHashTagEntity.Text">
            <summary>
            Gets or sets the hash tag text.
            </summary>
            <value>The hash tag text.</value>
        </member>
        <member name="P:Twitterizer.GetListMembersOptions.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="T:Twitterizer.Commands.VerifyCredentialsCommand">
            <summary>
            The verify credentials command class.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.VerifyCredentialsCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.VerifyCredentialsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RateLimitStatusCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.VerifyCredentialsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.RateLimiting">
            <summary>
            Provides data about the user's current rate limiting.
            </summary>
        </member>
        <member name="P:Twitterizer.RateLimiting.Remaining">
            <summary>
            Gets the remaining number of requests until requests are denied.
            </summary>
            <value>The remaining requests.</value>
        </member>
        <member name="P:Twitterizer.RateLimiting.Total">
            <summary>
            Gets the total number of requests allowed before requests are denied.
            </summary>
            <value>The total number of requests.</value>
        </member>
        <member name="P:Twitterizer.RateLimiting.ResetDate">
            <summary>
            Gets the date the remaining number of requests will be reset.
            </summary>
            <value>The reset date.</value>
        </member>
        <member name="T:Twitterizer.OAuthTokens">
            <summary>Contains security tokens nessisary for performing authorized actions against the Twitter API</summary><seealso cref="T:Twitterizer.OAuthUtility"/><example>
      To perform authorized actions, you must create a new <c>OAuthTokens</c> variable and supply values for the <see cref="P:Twitterizer.OAuthTokens.ConsumerKey"/>, <see cref="P:Twitterizer.OAuthTokens.ConsumerSecret"/>, <see cref="P:Twitterizer.OAuthTokens.AccessToken"/>, and <see cref="P:Twitterizer.OAuthTokens.AccessTokenSecret"/> properties, as follows:
      <code lang="cs">
        OAuthTokens tokens = new OAuthTokens();
        tokens.AccessToken = "XXX";
        tokens.AccessTokenSecret = "XXX";
        tokens.ConsumerKey = "XXX";
        tokens.ConsumerSecret = "XXX";
      </code>
      <code lang="vb">
        Dim tokens As new OAuthTokens();
        tokens.AccessToken = "XXX"
        tokens.AccessTokenSecret = "XXX"
        tokens.ConsumerKey = "XXX"
        tokens.ConsumerSecret = "XXX"
      </code>
    </example>
        </member>
        <member name="P:Twitterizer.OAuthTokens.AccessToken">
            <summary>
            Gets or sets the access token.
            </summary>
            <value>The access token.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.AccessTokenSecret">
            <summary>
            Gets or sets the access token secret.
            </summary>
            <value>The access token secret.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.ConsumerKey">
            <summary>
            Gets or sets the consumer key.
            </summary>
            <value>The consumer key.</value>
        </member>
        <member name="P:Twitterizer.OAuthTokens.ConsumerSecret">
            <summary>
            Gets or sets the consumer secret.
            </summary>
            <value>The consumer secret.</value>
        </member>
        <member name="T:Twitterizer.Commands.UpdateStatusCommand">
            <summary>
            The command to update the user's status. (a.k.a. post a new tweet)
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.UpdateStatusCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.StatusUpdateOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.UpdateStatusCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="text">The status text.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Commands.UpdateStatusCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.UpdateStatusCommand.Text">
            <summary>
            Gets or sets the status text.
            </summary>
            <value>The status text.</value>
        </member>
        <member name="T:Twitterizer.TwitterTrendCollection">
            <summary>
            The TwitterTrendCollection class. Represents multiple <see cref="T:Twitterizer.TwitterTrend"/> elements.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterTrendCollection.Converter">
            <summary>
            The Json converter class for the TwitterTrendCollection object
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterTrendCollection.Converter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTrendCollection.Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns>A collection of <see cref="T:Twitterizer.TwitterTrend"/> items.</returns>
        </member>
        <member name="M:Twitterizer.TwitterTrendCollection.Converter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="T:Twitterizer.Commands.DeleteSavedSearchCommand">
            <summary>
            The delete saved search command class. 
            Deletes the saved search specified in the ID parameter as the authenticating user. 
            Returns the deleted saved search in the requested format when successful.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DeleteSavedSearchCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DeleteSavedSearchCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The saved search id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.DeleteSavedSearchCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.UpdateListOptions">
            <summary>
            The UpdateListOptions class. Provides a payload for optional parameters for the UpdaetListCommand class.
            </summary>
        </member>
        <member name="P:Twitterizer.UpdateListOptions.Name">
            <summary>
            Gets or sets the name of the list.
            </summary>
            <value>The name of the list.</value>
        </member>
        <member name="P:Twitterizer.UpdateListOptions.IsPublic">
            <summary>
            Gets or sets a value indicating whether this instance is public.
            </summary>
            <value><c>true</c> if this instance is public; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Twitterizer.UpdateListOptions.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Twitterizer.Commands.GetListMembersCommand">
            <summary>
            Returns the members of the specified list.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.GetListMembersCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.GetListMembersOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.GetListsCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.GetListMembersCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.GetListMembersCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="P:Twitterizer.Commands.GetListMembersCommand.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="P:Twitterizer.Commands.GetListMembersCommand.ListIdOrSlug">
            <summary>
            Gets or sets the list id.
            </summary>
            <value>The list id.</value>
        </member>
        <member name="T:Twitterizer.ListFavoritesOptions">
            <summary>
            The list favorites options class. Provides a payload for optional parameters of the ListFavoritesCommand class.
            </summary>
        </member>
        <member name="P:Twitterizer.ListFavoritesOptions.UserNameOrId">
            <summary>
            Gets or sets the user name or id of the user for whom to return results for.
            </summary>
            <value>The user name or id of the user for whom to return results for.</value>
        </member>
        <member name="P:Twitterizer.ListFavoritesOptions.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="T:Twitterizer.Commands.DeleteFavoriteCommand">
            <summary>
            The delete favoriate command class. 
            Un-favorites the status specified in the ID parameter as the authenticating user. 
            Returns the un-favorited status in the requested format when successful.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DeleteFavoriteCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DeleteFavoriteCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.DeleteFavoriteCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.DirectMessagesSentOptions">
            <summary>
            The direct messages sent options class. Provides a payload for the <see cref="T:Twitterizer.Commands.DirectMessagesCommand"/> command.
            </summary>
        </member>
        <member name="M:Twitterizer.DirectMessagesSentOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.DirectMessagesSentOptions"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.DirectMessagesSentOptions.SinceStatusId">
            <summary>
            Gets or sets the minimum (earliest) status id to request.
            </summary>
            <value>The since id.</value>
        </member>
        <member name="P:Twitterizer.DirectMessagesSentOptions.MaxStatusId">
            <summary>
            Gets or sets the max (latest) status id to request.
            </summary>
            <value>The max id.</value>
        </member>
        <member name="P:Twitterizer.DirectMessagesSentOptions.Count">
            <summary>
            Gets or sets the number of messages to request.
            </summary>
            <value>The number of messages to request.</value>
        </member>
        <member name="P:Twitterizer.DirectMessagesSentOptions.Page">
            <summary>
            Gets or sets the page number to request.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="T:Twitterizer.TwitterList">
            <summary>
            The twitter list entity class
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterList.New(Twitterizer.OAuthTokens,System.String,System.String,System.Boolean,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Creates a new list for the authenticated user. Accounts are limited to 20 lists.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <param name="username">The username.</param>
            <param name="name">The list name.</param>
            <param name="isPublic">if set to <c>true</c> creates a public list.</param>
            <param name="description">The description.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterList"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterList.New(Twitterizer.OAuthTokens,System.String,System.String,System.Boolean,System.String)">
            <summary>
            Creates a new list for the authenticated user. Accounts are limited to 20 lists.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <param name="username">The username.</param>
            <param name="name">The list name.</param>
            <param name="isPublic">if set to <c>true</c> creates a public list.</param>
            <param name="description">The description.</param>
            <returns>A <see cref="T:Twitterizer.TwitterList"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterList.Update(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.UpdateListOptions)">
            <summary>
            Updates the specified list.
            </summary>
            <param name="tokens">The oauth tokens.</param>
            <param name="username">The username.</param>
            <param name="listId">The list id.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterList"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetLists(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user who's lists are being returned.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetLists(Twitterizer.OAuthTokens,System.String)">
            <summary>
            List the lists of the specified user. Private lists will be included if the authenticated users is the same as the user who's lists are being returned.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetList(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Show the specified list. Private lists will only be shown if the authenticated user owns the specified list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetList(Twitterizer.OAuthTokens,System.String,System.String)">
            <summary>
            Show the specified list. Private lists will only be shown if the authenticated user owns the specified list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.Delete(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Deletes the specified list. Must be owned by the authenticated user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterList"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetStatuses(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.ListStatusesOptions)">
            <summary>
            Show tweet timeline for members of the specified list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterStatusCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetMemberships(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            List the lists the specified user has been added to.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetMemberships(Twitterizer.OAuthTokens,System.String)">
            <summary>
            List the lists the specified user has been added to.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetSubscriptions(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            List the lists the specified user follows.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userName">Name of the user.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetSubscriptions(Twitterizer.OAuthTokens,System.String)">
            <summary>
            List the lists the specified user follows.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="userName">Name of the user.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterListCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetMembers(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.GetListMembersOptions)">
            <summary>
            Returns the members of the specified list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="listIdOrSlug">The list id or slug.</param>
            <param name="options">The options.</param>
            <returns>
            A collection of users as <see cref="T:Twitterizer.TwitterUserCollection"/>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.GetMembers(Twitterizer.OAuthTokens,System.String,System.String)">
            <summary>
            Returns the members of the specified list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="listId">The list id.</param>
            <returns>
            A collection of users as <see cref="T:Twitterizer.TwitterUserCollection"/>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.AddMember(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Add a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="ownerUsername">The username of the list owner.</param>
            <param name="listId">The list id.</param>
            <param name="userIdToAdd">The user id to add.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterList"/> representing the list the user was added to, or <c>null</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.AddMember(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal)">
            <summary>
            Add a member to a list. The authenticated user must own the list to be able to add members to it. Lists are limited to having 500 members.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="ownerUsername">The username of the list owner.</param>
            <param name="listId">The list id.</param>
            <param name="userIdToAdd">The user id to add.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterList"/> representing the list the user was added to, or <c>null</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.RemoveMember(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="ownerUsername">The username of the list owner.</param>
            <param name="listId">The list id.</param>
            <param name="userIdToAdd">The user id to add.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterList"/> representing the list the user was added to, or <c>null</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.RemoveMember(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal)">
            <summary>
            Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="ownerUsername">The username of the list owner.</param>
            <param name="listId">The list id.</param>
            <param name="userIdToAdd">The user id to add.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterList"/> representing the list the user was added to, or <c>null</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.CheckMembership(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Check if a user is a member of the specified list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="ownerUsername">The username of the list owner.</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
            <returns>
            The user's details, if they are a member of the list, otherwise <c>null</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterList.CheckMembership(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal)">
            <summary>
            Check if a user is a member of the specified list.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="ownerUsername">The username of the list owner.</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <returns>
            The user's details, if they are a member of the list, otherwise <c>null</c>.
            </returns>
        </member>
        <member name="P:Twitterizer.TwitterList.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The list id.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The list name.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.FullName">
            <summary>
            Gets or sets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.Slug">
            <summary>
            Gets or sets the slug.
            </summary>
            <value>The list slug.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.NumberOfSubscribers">
            <summary>
            Gets or sets the number of subscribers.
            </summary>
            <value>The number of subscribers.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.NumberOfMembers">
            <summary>
            Gets or sets the number of members.
            </summary>
            <value>The number of members.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.AbsolutePath">
            <summary>
            Gets or sets the absolute path.
            </summary>
            <value>The absolute path.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.Mode">
            <summary>
            Gets or sets the mode.
            </summary>
            <value>The list mode.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.User">
            <summary>
            Gets or sets the user that owns the list.
            </summary>
            <value>The owning user.</value>
        </member>
        <member name="P:Twitterizer.TwitterList.IsPublic">
            <summary>
            Gets a value indicating whether this instance is public.
            </summary>
            <value><c>true</c> if this instance is public; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.StatusUpdateOptions">
            <summary>
            The Status Update Options class
            </summary>
        </member>
        <member name="M:Twitterizer.StatusUpdateOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.StatusUpdateOptions"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.StatusUpdateOptions.InReplyToStatusId">
            <summary>
            Gets or sets the in reply to status id.
            </summary>
            <value>The in reply to status id.</value>
        </member>
        <member name="P:Twitterizer.StatusUpdateOptions.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Twitterizer.StatusUpdateOptions.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="P:Twitterizer.StatusUpdateOptions.PlacePin">
            <summary>
            Gets or sets a value indicating whether or not to put a pin on the exact coordinates a tweet has been sent from.
            </summary>
            <value><c>true</c> to put a pin on the exact coordinates; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Twitterizer.StatusUpdateOptions.PlaceId">
            <summary>
            Gets or sets a place in the world. These IDs can be retrieved from geo/reverse_geocode.
            </summary>
            <value>The place id.</value>
        </member>
        <member name="T:Twitterizer.OAuthUtility">
            <summary>A utility for handling authorization and request signatures for the OAuth protocol.</summary><remarks>
      <para>Before you begin, you will need to register your application with Twitter.</para>
      <para>
        To authenticate a user, there are 3 steps you will take:<br/>
        1) Obtain a Request Token<br/>
        2) Authentication<br/>
        3) Obtain an Access Token
      </para>
    </remarks><example>
      First, you must obtain a request token from the API.
      <code lang="cs">
        string consumerKey = "XXX";
        string consumerSecret = "XXX";

        // Obtain a request token
        OAuthTokenResponse requestToken = OAuthUtility.GetRequestToken(consumerKey, consumerSecret);

        // Direct or instruct the user to the following address:
        Uri authorizationUri = OAuthUtility.BuildAuthorizationUri(requestToken.Token);
      </code>
      <code lang="vb">
        Dim consumerKey As String = "XXX"
        Dim consumerSecret As String = "XXX"

        '-- Obtain a request token
        Dim requestToken As OAuthTokenResponse = OAuthUtility.GetRequestToken(consumerKey, consumerSecret)

        '-- Direct or instruct the user to the following address:
        Dim authorizationUri As Uri = OAuthUtility.BuildAuthorizationUri(requestToken.Token)
      </code>
      
      After the user has returned, you must obtain or reuse the request token and obtain the verifier value. For web applications, both values will be provided on the querystring to the callback url as oauth_token and oauth_verifier, respectively. For desktop and mobile applications, the verifier will be a numeric PIN supplied to the user.
      
      <code lang="cs">
        string consumerKey = "XXX";
        string consumerSecret = "XXX";
        string requestToken = "XXX";
        string verifier = "XXX";

        // Obtain the access token for this user.
        OAuthTokenResponse accessToken = OAuthUtility.GetAccessToken(consumerKey, consumerSecret, requestToken, verifier);
        
        // TODO: Save the access token to a database, session, xml file, or whereever my user data is stored.
      </code>
      <code lang="vb">
        Dim consumerKey As String = "XXX"
        Dim consumerSecret As String = "XXX"
        Dim requestToken As String = "XXX"
        Dim verifier As String = "XXX"

        '-- Obtain the access token for this user.
        Dim accessToken As OAuthTokenResponse = OAuthUtility.GetAccessToken(consumerKey, consumerSecret, requestToken, verifier)

        '-- TODO: Save the access token to a database, session, xml file, or whereever my user data is stored.
      </code>
    </example><seealso cref="T:Twitterizer.OAuthTokenResponse"/><seealso cref="!:Twitterizer.OAuthUtility.GetRequestToken(string,string)"/><seealso cref="M:Twitterizer.OAuthUtility.GetAccessToken(System.String,System.String,System.String,System.String)"/><seealso cref="M:Twitterizer.OAuthUtility.BuildAuthorizationUri(System.String)"/>
        </member>
        <member name="M:Twitterizer.OAuthUtility.GetRequestToken(System.String,System.String,System.String)">
            <summary>
            Gets the request token.
            </summary>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="callbackAddress">The callback address. For PIN-based authentication "oob" should be supplied.</param>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.OAuthUtility.GetRequestToken(System.String,System.String,System.String,System.Net.WebProxy)">
            <summary>
            Gets a new OAuth request token from the twitter api.
            </summary>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="callbackAddress">The callback address. For PIN-based authentication "oob" should be supplied.</param>
            <param name="proxy">The proxy.</param>
            <returns>
            A new <see cref="T:Twitterizer.OAuthTokenResponse"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.OAuthUtility.GetAccessToken(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the access token.
            </summary>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="requestToken">The request token.</param>
            <param name="verifier">The pin number or verifier string.</param>
            <returns>
            An <see cref="T:Twitterizer.OAuthTokenResponse"/> class containing access token information.
            </returns>
        </member>
        <member name="M:Twitterizer.OAuthUtility.GetAccessToken(System.String,System.String,System.String,System.String,System.Net.WebProxy)">
            <summary>
            Gets the access token.
            </summary>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <param name="requestToken">The request token.</param>
            <param name="verifier">The pin number or verifier string.</param>
            <param name="proxy">The proxy.</param>
            <returns>
            An <see cref="T:Twitterizer.OAuthTokenResponse"/> class containing access token information.
            </returns>
        </member>
        <member name="M:Twitterizer.OAuthUtility.BuildAuthorizationUri(System.String)">
            <summary>
            Builds the authorization URI.
            </summary>
            <param name="requestToken">The request token.</param>
            <returns>A new <see cref="T:System.Uri"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.OAuthUtility.BuildAuthorizationUri(System.String,System.Boolean)">
            <summary>
            Builds the authorization URI.
            </summary>
            <param name="requestToken">The request token.</param>
            <param name="authenticate">if set to <c>true</c>, the authenticate url will be used. (See: "Sign in with Twitter")</param>
            <returns>A new <see cref="T:System.Uri"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.OAuthUtility.GetAccessTokenDuringCallback(System.String,System.String)">
            <summary>
            Gets the access token during callback.
            </summary>
            <param name="consumerKey">The consumer key.</param>
            <param name="consumerSecret">The consumer secret.</param>
            <returns>
            Access tokens returned by the Twitter API
            </returns>
        </member>
        <member name="M:Twitterizer.OAuthUtility.AddOAuthEchoHeader(System.Net.WebRequest,Twitterizer.OAuthTokens)">
            <summary>
            Adds the OAuth Echo header to the supplied web request.
            </summary>
            <param name="request">The request.</param>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="T:Twitterizer.Commands.UpdateListCommand">
            <summary>
            The update list command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.UpdateListCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.UpdateListOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.UpdateListCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="username">The username.</param>
            <param name="id">The list id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.UpdateListCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.GetListSubscriptionsCommand">
            <summary>
            The create list command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.GetListSubscriptionsCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.GetListSubscriptionsCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.GetListSubscriptionsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.GetListSubscriptionsCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="P:Twitterizer.Commands.GetListSubscriptionsCommand.Username">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="T:Twitterizer.Commands.FriendsIdsCommand">
            <summary>
            Returns the members of the specified list.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FriendsIdsCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.UsersIdsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.FriendsIdsCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.FriendsIdsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FriendsIdsCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.Commands.ListFavoritesCommand">
            <summary>
            The ListFavoritesCommand class. Returns the 20 most recent favorite statuses for the authenticating user or user specified by the ID parameter in the requested format.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.ListFavoritesCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.ListFavoritesOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.ListFavoritesCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.ListFavoritesCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.CreateFavoriteCommand">
            <summary>
            The Create Favorite Command class. Favorites the status specified in the ID parameter as the authenticating user. Returns the favorite status when successful.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.CreateFavoriteCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.CreateFavoriteCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.CreateFavoriteCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterDirectMessage">
            <summary>
            The Direct Message Entity Class
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.DirectMessages(Twitterizer.OAuthTokens)">
            <summary>
            Returns a list of the 20 most recent direct messages sent to the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>A <see cref="T:Twitterizer.TwitterDirectMessageCollection"/> instance.</returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.DirectMessages(Twitterizer.OAuthTokens,Twitterizer.DirectMessagesOptions)">
            <summary>
            Returns a list of the 20 most recent direct messages sent to the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterDirectMessageCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.DirectMessagesSent(Twitterizer.OAuthTokens)">
            <summary>
            Returns a list of the 20 most recent direct messages sent by the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterDirectMessageCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.Send(Twitterizer.OAuthTokens,System.Decimal,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Sends a new direct message to the specified user from the authenticating user.
            </summary>
            <param name="tokens">The OAuth tokens.</param>
            <param name="userId">The user id.</param>
            <param name="text">The text of your direct message.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterDirectMessage"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.Send(Twitterizer.OAuthTokens,System.Decimal,System.String)">
            <summary>
            Sends a new direct message to the specified user from the authenticating user.
            </summary>
            <param name="tokens">The OAuth tokens.</param>
            <param name="userId">The user id.</param>
            <param name="text">The text of your direct message.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterDirectMessage"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.Send(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Sends a new direct message to the specified user from the authenticating user.
            </summary>
            <param name="tokens">The OAuth tokens.</param>
            <param name="screenName">The user's screen name.</param>
            <param name="text">The message text.</param>
            <param name="options">The options.</param>
            <returns>A <see cref="T:Twitterizer.TwitterDirectMessage"/> object of the created direct message.</returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.Send(Twitterizer.OAuthTokens,System.String,System.String)">
            <summary>
            Sends a new direct message to the specified user from the authenticating user.
            </summary>
            <param name="tokens">The OAuth tokens.</param>
            <param name="screenName">The user's screen name.</param>
            <param name="text">The message text.</param>
            <returns>A <see cref="T:Twitterizer.TwitterDirectMessage"/> object of the created direct message.</returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.DirectMessagesSent(Twitterizer.OAuthTokens,Twitterizer.DirectMessagesSentOptions)">
            <summary>
            Returns a list of the 20 most recent direct messages sent by the authenticating user.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterDirectMessageCollection"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.Delete(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Deletes this direct message.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterDirectMessage"/> instance.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterDirectMessage.Delete(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Deletes this direct message.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="id">The direct message id.</param>
            <param name="options">The options.</param>
            <returns>
            A <see cref="T:Twitterizer.TwitterDirectMessage"/> instance.
            </returns>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.Id">
            <summary>
            Gets or sets the direct message id.
            </summary>
            <value>The direct message id.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.SenderId">
            <summary>
            Gets or sets the sender id.
            </summary>
            <value>The sender id.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.Text">
            <summary>
            Gets or sets the direct message text.
            </summary>
            <value>The direct message text.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.RecipientId">
            <summary>
            Gets or sets the recipient id.
            </summary>
            <value>The recipient id.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.CreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.SenderScreenName">
            <summary>
            Gets or sets the name of the sender screen.
            </summary>
            <value>The name of the sender screen.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.RecipientScreenName">
            <summary>
            Gets or sets the name of the recipient screen.
            </summary>
            <value>The name of the recipient screen.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.Sender">
            <summary>
            Gets or sets the sender.
            </summary>
            <value>The sender.</value>
        </member>
        <member name="P:Twitterizer.TwitterDirectMessage.Recipient">
            <summary>
            Gets or sets the recipient.
            </summary>
            <value>The recipient.</value>
        </member>
        <member name="T:Twitterizer.Commands.DirectMessagesSentCommand">
            <summary>
            The Direct Messages Sent Command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DirectMessagesSentCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.DirectMessagesSentOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DirectMessagesSentCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.DirectMessagesSentCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DirectMessagesSentCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.HTTPVerb">
            <summary>
            Enumeration of the supported HTTP verbs supported by the <see cref="T:Twitterizer.Core.CommandPerformer`1"/>
            </summary>
        </member>
        <member name="F:Twitterizer.HTTPVerb.GET">
            <summary>
            The HTTP GET method is used to retrieve data.
            </summary>
        </member>
        <member name="F:Twitterizer.HTTPVerb.POST">
            <summary>
            The HTTP POST method is used to transmit data.
            </summary>
        </member>
        <member name="F:Twitterizer.HTTPVerb.DELETE">
            <summary>
            The HTTP DELETE method is used to indicate that a resource should be deleted.
            </summary>
        </member>
        <member name="T:Twitterizer.WebRequestBuilder">
            <summary>
            The Web Request Builder class.
            </summary>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.Realm">
            <summary>
            The HTTP Authorization realm.
            </summary>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.OAuthParametersToIncludeInHeader">
            <summary>
            OAuth Parameters key names to include in the Authorization header.
            </summary>
        </member>
        <member name="F:Twitterizer.WebRequestBuilder.SecretParameters">
            <summary>
            Parameters that may appear in the list, but should never be included in the header or the request.
            </summary>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.#ctor(System.Uri,Twitterizer.HTTPVerb)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.WebRequestBuilder"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="verb">The verb.</param>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.#ctor(System.Uri,Twitterizer.HTTPVerb,Twitterizer.OAuthTokens)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.WebRequestBuilder"/> class.
            </summary>
            <param name="requestUri">The request URI.</param>
            <param name="verb">The verb.</param>
            <param name="tokens">The tokens.</param>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.ExecuteRequest">
            <summary>
            Executes the request.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.PrepareRequest">
            <summary>
            Prepares the request. It is not nessisary to call this method unless additional configuration is required.
            </summary>
            <returns>A <see cref="T:System.Net.HttpWebRequest"/> object fully configured and ready for execution.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.AddQueryStringParametersToUri">
            <summary>
            Adds the parameters to request uri.
            </summary>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.AddFormFieldValuesToRequest(System.Net.WebRequest)">
            <summary>
            Adds the form field values to request.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.SetupOAuth">
            <summary>
            Sets up the OAuth request details.
            </summary>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateSignature">
            <summary>
            Generates the signature.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateTimeStamp">
            <summary>
            Generate the timestamp for the signature        
            </summary>
            <returns>A timestamp value in a string.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateNonce">
            <summary>
            Generate a nonce
            </summary>
            <returns>A random number between 123400 and 9999999 in a string.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.NormalizeUrl(System.Uri)">
            <summary>
            Normalizes the URL.
            </summary>
            <param name="url">The URL to normalize.</param>
            <returns>The normalized url string.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.UrlEncode(System.String)">
            <summary>
            Encodes a value for inclusion in a URL querystring.
            </summary>
            <param name="value">The value to Url encode</param>
            <returns>Returns a Url encoded string</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.UrlEncode(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Encodes a series of key/value pairs for inclusion in a URL querystring.
            </summary>
            <param name="parameters">The parameters.</param>
            <returns>A string of all the <paramref name="parameters"/> keys and value pairs with the values encoded.</returns>
        </member>
        <member name="M:Twitterizer.WebRequestBuilder.GenerateAuthorizationHeader">
            <summary>
            Generates the authorization header.
            </summary>
            <returns>The string value of the HTTP header to be included for OAuth requests.</returns>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.RequestUri">
            <summary>
            Gets or sets the request URI.
            </summary>
            <value>The request URI.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Parameters">
            <summary>
            Gets or sets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Verb">
            <summary>
            Gets or sets the verb.
            </summary>
            <value>The verb.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Tokens">
            <summary>
            Gets or sets the oauth tokens.
            </summary>
            <value>The tokens.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.Proxy">
            <summary>
            Gets or sets the proxy.
            </summary>
            <value>The proxy.</value>
        </member>
        <member name="P:Twitterizer.WebRequestBuilder.UseOAuth">
            <summary>
            Gets or sets a value indicating whether the request will be signed with an OAuth authorization header.
            </summary>
            <value><c>true</c> if [use O auth]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.ConversionUtility">
            <summary>
            Provides common color converstion methods
            </summary>
            <tocexclude />
        </member>
        <member name="M:Twitterizer.ConversionUtility.FromTwitterString(System.String)">
            <summary>
            Converts the color string to a <see cref="T:System.Drawing.Color"/>
            </summary>
            <param name="value">The value.</param>
            <returns>A <see cref="T:System.Drawing.Color"/> representation of the color, or null.</returns>
        </member>
        <member name="M:Twitterizer.ConversionUtility.ReadStream(System.IO.Stream)">
            <summary>
            Reads the stream into a byte array.
            </summary>
            <param name="responseStream">The response stream.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="T:Twitterizer.Commands.DeleteFriendshipCommand">
            <summary>
            The delete friendship command class.
            </summary>
        </member>
        <member name="F:Twitterizer.Commands.DeleteFriendshipCommand.Path">
            <summary>
            The base address to the API method.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DeleteFriendshipCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DeleteFriendshipCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="userId">The user id.</param>
            <param name="userName">The user name.</param>
            <param name="optionalProperties">The optional properties.</param>
        </member>
        <member name="M:Twitterizer.Commands.DeleteFriendshipCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.DeleteFriendshipCommand.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.Commands.DeleteFriendshipCommand.UserName">
            <summary>
            Gets or sets the username.
            </summary>
            <value>The username.</value>
        </member>
        <member name="T:Twitterizer.FriendsOptions">
            <summary>
            The friends options class. Provides a payload for optional parameters of the <see cref="T:Twitterizer.Commands.FriendsCommand"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.FriendsOptions.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="P:Twitterizer.FriendsOptions.ScreenName">
            <summary>
            Gets or sets the user's screen name.
            </summary>
            <value>The screen name of the user.</value>
        </member>
        <member name="P:Twitterizer.FriendsOptions.Cursor">
            <summary>
            Gets or sets the cursor.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="T:Twitterizer.Commands.PublicTimelineCommand">
            <summary>
            The Public Timeline Command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.PublicTimelineCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.PublicTimelineCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.PublicTimelineCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.RetweetsOptions">
            <summary>
            The Retweets Options class. Provides a payload for optional parameters for the Retweets Command
            </summary>
        </member>
        <member name="P:Twitterizer.RetweetsOptions.Count">
            <summary>
            Gets or sets the count of statuses to return.
            </summary>
            <value>The number of statuses to return.</value>
        </member>
        <member name="T:Twitterizer.Commands.DeleteDirectMessageCommand">
            <summary>
            The Delete Direct Message Command class.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DeleteDirectMessageCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DeleteDirectMessageCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="id">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.DeleteDirectMessageCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.DeleteDirectMessageCommand.Id">
            <summary>
            Gets or sets the status id.
            </summary>
            <value>The status id.</value>
        </member>
        <member name="M:Twitterizer.Commands.UpdateProfileImageCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.TwitterImage,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.UpdateProfileImageCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="image">The image.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.UpdateProfileImageCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.RetweetsCommand">
            <summary>
            The retweets command class.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetsCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.RetweetsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RetweetsCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RetweetsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.FriendsCommand">
            <summary>
            The command to obtain followers of a user.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FriendsCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.FriendsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.FriendsCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.FriendsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.FriendsCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>A cloned command object.</returns>
        </member>
        <member name="T:Twitterizer.Commands.RelatedResultsCommand">
            <summary>
            The Related Results Command.
            </summary>
        </member>
        <member name="F:Twitterizer.Commands.RelatedResultsCommand.Path">
            <summary>
            The base address to the API method.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RelatedResultsCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RelatedResultsCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="statusId">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RelatedResultsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Entities.TwitterMentionEntity">
            <summary>
            Represents mention of a user within a <see cref="P:Twitterizer.TwitterStatus.Text"/> value.
            </summary>
        </member>
        <member name="M:Twitterizer.Entities.TwitterMentionEntity.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Entities.TwitterMentionEntity"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.Entities.TwitterMentionEntity.ScreenName">
            <summary>
            Gets or sets the user's screen name.
            </summary>
            <value>The user's screen name.</value>
        </member>
        <member name="P:Twitterizer.Entities.TwitterMentionEntity.Name">
            <summary>
            Gets or sets the user's name.
            </summary>
            <value>The user's name.</value>
        </member>
        <member name="P:Twitterizer.Entities.TwitterMentionEntity.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="T:Twitterizer.CurrentTrendsOptions">
            <summary>
            The current trends options class. Provides a payload for optional parameters for the CurrentTrendsCommand class.
            </summary>
        </member>
        <member name="P:Twitterizer.CurrentTrendsOptions.ExcludeHashTags">
            <summary>
            Gets or sets a value indicating whether [exclude hash tags].
            </summary>
            <value><c>true</c> if [exclude hash tags]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:Twitterizer.SearchOptionsResultType">
            <summary>
            The available search result type filter options.
            </summary>
        </member>
        <member name="F:Twitterizer.SearchOptionsResultType.Default">
            <summary>
            Use Twitter's default
            </summary>
        </member>
        <member name="F:Twitterizer.SearchOptionsResultType.Mixed">
            <summary>
            Include both popular and real time results in the response.
            </summary>
        </member>
        <member name="F:Twitterizer.SearchOptionsResultType.Recent">
            <summary>
            Return only the most recent results in the response.
            </summary>
        </member>
        <member name="F:Twitterizer.SearchOptionsResultType.Popular">
            <summary>
            Return only the most popular results in the response.
            </summary>
        </member>
        <member name="T:Twitterizer.SearchOptions">
            <summary>
            The search options class. Provides a payload for optional parameters for the SearchCommand class.
            </summary>
        </member>
        <member name="M:Twitterizer.SearchOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.SearchOptions"/> class.
            </summary>
        </member>
        <member name="P:Twitterizer.SearchOptions.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>The language.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.Locale">
            <summary>
            Gets or sets the locale.
            </summary>
            <value>The locale.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.MaxId">
            <summary>
            Gets or sets the max id.
            </summary>
            <value>The max id.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.NumberPerPage">
            <summary>
            Gets or sets the number per page.
            </summary>
            <value>The number per page.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.PageNumber">
            <summary>
            Gets or sets the page number.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.SinceDate">
            <summary>
            Gets or sets the since date.
            </summary>
            <value>The since date.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.SinceId">
            <summary>
            Gets or sets the since id.
            </summary>
            <value>The since id.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.GeoCode">
            <summary>
            Gets or sets the geo code string. 
            The parameter value is specified by "latitude,longitude,radius", where radius units must be specified as either "mi" (miles) or "km" (kilometers). Note that you cannot use the near operator via the API to geocode arbitrary locations; however you can use this geocode parameter to search near geocodes directly.
            </summary>
            <value>The geo code.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.PrefixUsername">
            <summary>
            Gets or sets a value indicating whether to prefix the user name to the tweet.
            </summary>
            <value>
            <c>true</c> to prefix the user name to the tweet; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Twitterizer.SearchOptions.UntilDate">
            <summary>
            Gets or sets the until date.
            </summary>
            <value>The until date.</value>
        </member>
        <member name="P:Twitterizer.SearchOptions.ResultType">
            <summary>
            Gets or sets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="T:Twitterizer.TwitterErrorDetails">
            <summary>
            Twitter Error Details class
            </summary>
            <remarks>Often, twitter returns error details in the body of response. This class represents the data structure of the error for deserialization.</remarks>
        </member>
        <member name="P:Twitterizer.TwitterErrorDetails.RequestPath">
            <summary>
            Gets or sets the request path.
            </summary>
            <value>The request path.</value>
        </member>
        <member name="P:Twitterizer.TwitterErrorDetails.ErrorMessage">
            <summary>
            Gets or sets the error message.
            </summary>
            <value>The error message.</value>
        </member>
        <member name="T:Twitterizer.TwitterTrend">
            <summary>
            The TwitterTrend class.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterTrend.Current(Twitterizer.CurrentTrendsOptions)">
            <summary>
            Gets the current trends.
            </summary>
            <param name="options">The options.</param>
            <returns>
            A collection of <see cref="T:Twitterizer.TwitterTrend"/> objects.
            </returns>
        </member>
        <member name="M:Twitterizer.TwitterTrend.Current">
            <summary>
            Gets the current trends.
            </summary>
            <returns>
            A collection of <see cref="T:Twitterizer.TwitterTrend"/> objects.
            </returns>
        </member>
        <member name="P:Twitterizer.TwitterTrend.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>The name of the trend.</value>
        </member>
        <member name="P:Twitterizer.TwitterTrend.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>The address.</value>
        </member>
        <member name="P:Twitterizer.TwitterTrend.SearchQuery">
            <summary>
            Gets or sets the search query.
            </summary>
            <value>The search query.</value>
        </member>
        <member name="T:Twitterizer.Entities.TwitterEntityCollection">
            <summary>
            Represents multiple <see cref="T:Twitterizer.Entities.TwitterEntity"/> objects.
            </summary>
        </member>
        <member name="T:Twitterizer.Entities.TwitterEntityCollection.Converter">
            <summary>
            The Json converter for <see cref="T:Twitterizer.Entities.TwitterEntityCollection"/> data.
            </summary>
        </member>
        <member name="M:Twitterizer.Entities.TwitterEntityCollection.Converter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.Entities.TwitterEntityCollection.Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The <see cref="T:Newtonsoft.Json.JsonReader"/> to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:Twitterizer.Commands.SearchCommand">
            <summary>
            The create list command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.SearchCommand.#ctor(Twitterizer.OAuthTokens,System.String,Twitterizer.SearchOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.SearchCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="query">The query.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.SearchCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.SearchCommand.Query">
            <summary>
            Gets or sets the query.
            </summary>
            <value>The query.</value>
        </member>
        <member name="T:Twitterizer.Commands.CurrentTrendsCommand">
            <summary>
            The create list command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.CurrentTrendsCommand.#ctor(Twitterizer.CurrentTrendsOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.CurrentTrendsCommand"/> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.CurrentTrendsCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="T:Twitterizer.Commands.CreateListCommand">
            <summary>
            The create list command class
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.CreateListCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.CreateListCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="name">The name of the list.</param>
            <param name="username">The username.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.CreateListCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.CreateListCommand.Name">
            <summary>
            Gets or sets the name of the list.
            </summary>
            <value>The name of the list.</value>
        </member>
        <member name="P:Twitterizer.Commands.CreateListCommand.IsPublic">
            <summary>
            Gets or sets a value indicating whether this instance is public.
            </summary>
            <value><c>true</c> if this instance is public; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Twitterizer.Commands.CreateListCommand.Description">
            <summary>
            Gets or sets the description.
            </summary>
            <value>The description.</value>
        </member>
        <member name="T:Twitterizer.TwitterPlaceLookupOptions">
            <summary>
            Provides a payload for optional parameters for the <see cref="M:Twitterizer.TwitterPlace.Lookup(System.Double,System.Double,Twitterizer.TwitterPlaceLookupOptions)"/> method.
            </summary>
        </member>
        <member name="P:Twitterizer.TwitterPlaceLookupOptions.Accuracy">
            <summary>
            A hint on the "region" in which to search. If a number, then this is a radius in meters, but it can also take a string that is suffixed with ft to specify feet. If this is not passed in, then it is assumed to be 0m. If coming from a device, in practice, this value is whatever accuracy the device has measuring its location (whether it be coming from a GPS, WiFi triangulation, etc.).
            </summary>
        </member>
        <member name="P:Twitterizer.TwitterPlaceLookupOptions.Granularity">
            <summary>
            The minimal granularity of data to return. If this is not passed in, then neighborhood is assumed. city can also be passed.
            </summary>
        </member>
        <member name="P:Twitterizer.TwitterPlaceLookupOptions.MaxResults">
            <summary>
            A hint as to the number of results to return. This does not guarantee that the number of results returned will equal max_results, but instead informs how many "nearby" results to return. Ideally, only pass in the number of places you intend to display to the user here.
            </summary>
        </member>
        <member name="T:Twitterizer.TwitterPlace">
            <summary>
            The twitter place class. Represents a place or area.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterPlace.Lookup(System.Double,System.Double,Twitterizer.TwitterPlaceLookupOptions)">
            <summary>
            Retrieves a place based on the specified coordinates.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <param name="options">The options.</param>
            <returns>A collection of matched <see cref="T:Twitterizer.TwitterPlace"/> items.</returns>
        </member>
        <member name="M:Twitterizer.TwitterPlace.Lookup(System.Double,System.Double)">
            <summary>
            Retrieves a place based on the specified coordinates.
            </summary>
            <param name="latitude">The latitude.</param>
            <param name="longitude">The longitude.</param>
            <returns>A collection of matched <see cref="T:Twitterizer.TwitterPlace"/> items.</returns>
        </member>
        <member name="P:Twitterizer.TwitterPlace.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
            <value>The country code.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.PlaceType">
            <summary>
            Gets or sets the type of the place.
            </summary>
            <value>The type of the place.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.DataAddress">
            <summary>
            Gets or sets the address of the data.
            </summary>
            <value>The address of the data.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.Country">
            <summary>
            Gets or sets the country.
            </summary>
            <value>The country.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.StreetAddress">
            <summary>
            Gets or sets the address of the street.
            </summary>
            <value>The address of the street.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.FullName">
            <summary>
            Gets or sets the full name.
            </summary>
            <value>The full name.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.Name">
            <summary>
            Gets or sets the name of the place.
            </summary>
            <value>The name of the place.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.Id">
            <summary>
            Gets or sets the place id.
            </summary>
            <value>The place id.</value>
        </member>
        <member name="P:Twitterizer.TwitterPlace.BoundingBox">
            <summary>
            Gets or sets the bounding box.
            </summary>
            <value>The bounding box.</value>
        </member>
        <member name="T:Twitterizer.TwitterUserCollection">
            <summary>
            The TwitterUserCollection class.
            </summary>
        </member>
        <member name="M:Twitterizer.TwitterUserCollection.NextPage">
            <summary>
            Gets the next page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterUserCollection"/> instance.</returns>
            <value>The next page.</value>
        </member>
        <member name="M:Twitterizer.TwitterUserCollection.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterUserCollection"/> instance.</returns>
            <value>The previous page.</value>
        </member>
        <member name="M:Twitterizer.TwitterUserCollection.DeserializeWrapper(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Twitterizer.TwitterUserCollection.NextCursor">
            <summary>
            Gets or sets the next cursor.
            </summary>
            <value>The next cursor.</value>
        </member>
        <member name="P:Twitterizer.TwitterUserCollection.PreviousCursor">
            <summary>
            Gets or sets the previous cursor.
            </summary>
            <value>The previous cursor.</value>
        </member>
        <member name="P:Twitterizer.TwitterUserCollection.RateLimiting">
            <summary>
            Gets or sets information about the user's rate usage.
            </summary>
            <value>The rate limiting object.</value>
        </member>
        <member name="P:Twitterizer.TwitterUserCollection.PagedCommand">
            <summary>
            Gets or sets the paged command.
            </summary>
            <value>The paged command.</value>
        </member>
        <member name="P:Twitterizer.TwitterUserCollection.CursorPagedCommand">
            <summary>
            Gets or sets the cursor paged command.
            </summary>
            <value>The cursor paged command.</value>
        </member>
        <member name="T:Twitterizer.Core.CommandPerformer`1">
            <summary>
            The Command Performer Class
            </summary>
            <typeparam name="T">The business object the performer should return.</typeparam>
            <tocexclude />
        </member>
        <member name="M:Twitterizer.Core.CommandPerformer`1.PerformAction(Twitterizer.Core.ICommand{`0})">
            <summary>
            Performs the action.
            </summary>
            <param name="command">The command.</param>
            <returns>The parsed result of the action.</returns>
            <seealso cref="T:Twitterizer.Core.TwitterCommand`1"/>
            <seealso cref="T:Twitterizer.Core.TwitterObject"/>
        </member>
        <member name="T:Twitterizer.Commands.RetweetedByMeCommand">
            <summary>
            The Retweeted By Me Command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetedByMeCommand.#ctor(Twitterizer.OAuthTokens,Twitterizer.TimelineOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.RetweetedByMeCommand"/> class.
            </summary>
            <param name="tokens">The request tokens.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RetweetedByMeCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RetweetedByMeCommand.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns>
            A new instance of the <see cref="T:Twitterizer.Core.PagedCommand`1"/> interface.
            </returns>
        </member>
        <member name="T:Twitterizer.TwitterRelatedTweets">
            <summary>
            The related tweets object. Represents the result from the related_results/show/:id.json endpoint.
            </summary>
            <seealso cref="T:Twitterizer.Commands.RelatedResultsCommand"/>
        </member>
        <member name="P:Twitterizer.TwitterRelatedTweets.Results">
            <summary>
            Gets or sets the results.
            </summary>
            <value>The results.</value>
        </member>
        <member name="P:Twitterizer.TwitterRelatedTweets.ResultType">
            <summary>
            Gets or sets the type of the result.
            </summary>
            <value>The type of the result.</value>
        </member>
        <member name="P:Twitterizer.TwitterRelatedTweets.GroupName">
            <summary>
            Gets or sets the name of the group.
            </summary>
            <value>The name of the group.</value>
        </member>
        <member name="P:Twitterizer.TwitterRelatedTweets.Score">
            <summary>
            Gets or sets the score.
            </summary>
            <value>The score.</value>
        </member>
        <member name="T:Twitterizer.Commands.DeleteStatusCommand">
            <summary>
            The command class to delete a status update.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.DeleteStatusCommand.#ctor(Twitterizer.OAuthTokens,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.DeleteStatusCommand"/> class.
            </summary>
            <param name="tokens">The tokens.</param>
            <param name="id">The status id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.DeleteStatusCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.DeleteStatusCommand.Id">
            <summary>
            Gets or sets the status id.
            </summary>
            <value>The status id.</value>
        </member>
        <member name="T:Twitterizer.ListStatusesOptions">
            <summary>
            The list statuses options class. Provides a payload for the ListStatusesCommand class.
            </summary>
        </member>
        <member name="P:Twitterizer.ListStatusesOptions.SinceId">
            <summary>
            Gets or sets the since id.
            </summary>
            <value>The since id.</value>
        </member>
        <member name="P:Twitterizer.ListStatusesOptions.MaxId">
            <summary>
            Gets or sets the max id.
            </summary>
            <value>The max id.</value>
        </member>
        <member name="P:Twitterizer.ListStatusesOptions.ItemsPerPage">
            <summary>
            Gets or sets the number of items per page to request.
            </summary>
            <value>The number of items per page.</value>
        </member>
        <member name="P:Twitterizer.ListStatusesOptions.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>The page number.</value>
        </member>
        <member name="T:Twitterizer.Commands.RemoveListMemberCommand">
            <summary>
            Removes the specified member from the list. The authenticated user must be the list's owner to remove members from the list.
            </summary>
        </member>
        <member name="M:Twitterizer.Commands.RemoveListMemberCommand.#ctor(Twitterizer.OAuthTokens,System.String,System.String,System.Decimal,Twitterizer.OptionalProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Commands.AddListMemberCommand"/> class.
            </summary>
            <param name="requestTokens">The request tokens.</param>
            <param name="ownerUsername">The owner username.</param>
            <param name="listId">The list id.</param>
            <param name="userId">The user id.</param>
            <param name="options">The options.</param>
        </member>
        <member name="M:Twitterizer.Commands.RemoveListMemberCommand.Init">
            <summary>
            Initializes the command.
            </summary>
        </member>
        <member name="P:Twitterizer.Commands.RemoveListMemberCommand.UserId">
            <summary>
            Gets or sets the user id.
            </summary>
            <value>The user id.</value>
        </member>
        <member name="T:Twitterizer.Coordinate">
            <summary>
            Represents a single point on planet earth.
            </summary>
        </member>
        <member name="P:Twitterizer.Coordinate.Latitude">
            <summary>
            Gets or sets the latitude.
            </summary>
            <value>The latitude.</value>
        </member>
        <member name="P:Twitterizer.Coordinate.Longitude">
            <summary>
            Gets or sets the longitude.
            </summary>
            <value>The longitude.</value>
        </member>
        <member name="T:Twitterizer.Coordinate.Converter">
            <summary>
            Reads a json array of coordinates and converts it into a collection of coordinate objects.
            </summary>
        </member>
        <member name="M:Twitterizer.Coordinate.Converter.CanConvert(System.Type)">
            <summary>
            Determines whether this instance can convert the specified object type.
            </summary>
            <param name="objectType">Type of the object.</param>
            <returns>
            <c>true</c> if this instance can convert the specified object type; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Twitterizer.Coordinate.Converter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json.
            </summary>
            <param name="reader">The reader.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value.</param>
            <param name="serializer">The serializer.</param>
            <returns>A deserialized <see cref="T:System.Collections.ObjectModel.Collection`1"/></returns>
        </member>
        <member name="M:Twitterizer.Coordinate.Converter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes the json.
            </summary>
            <param name="writer">The writer.</param>
            <param name="value">The value.</param>
            <param name="serializer">The serializer.</param>
        </member>
        <member name="T:Twitterizer.UserIdCollection">
            <summary>
            The twitter list collection class.
            </summary>
        </member>
        <member name="M:Twitterizer.UserIdCollection.NextPage">
            <summary>
            Gets the next page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterListCollection"/> instance.</returns>
            <value>The next page.</value>
        </member>
        <member name="M:Twitterizer.UserIdCollection.PreviousPage">
            <summary>
            Gets the previous page.
            </summary>
            <returns>A <see cref="T:Twitterizer.TwitterListCollection"/> instance.</returns>
            <value>The previous page.</value>
        </member>
        <member name="M:Twitterizer.UserIdCollection.DeserializeWrapper(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserializes the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Twitterizer.UserIdCollection.NextCursor">
            <summary>
            Gets or sets the next cursor.
            </summary>
            <value>The next cursor.</value>
        </member>
        <member name="P:Twitterizer.UserIdCollection.PreviousCursor">
            <summary>
            Gets or sets the previous cursor.
            </summary>
            <value>The previous cursor.</value>
        </member>
        <member name="P:Twitterizer.UserIdCollection.Tokens">
            <summary>
            Gets or sets the request parameters.
            </summary>
            <value>The request parameters.</value>
        </member>
        <member name="P:Twitterizer.UserIdCollection.RateLimiting">
            <summary>
            Gets or sets information about the user's rate usage.
            </summary>
            <value>The rate limiting object.</value>
        </member>
        <member name="P:Twitterizer.UserIdCollection.Command">
            <summary>
            Gets or sets the command.
            </summary>
            <value>The command.</value>
        </member>
        <member name="P:Twitterizer.UserIdCollection.Annotations">
            <summary>
            Gets or sets the annotations.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="T:Twitterizer.Core.AuthorizedCommandAttribute">
            <summary>
            Indicates that a command class requires authorization tokens.
            </summary>
        </member>
        <member name="M:Twitterizer.Core.AuthorizedCommandAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.Core.AuthorizedCommandAttribute"/> class.
            </summary>
        </member>
        <member name="T:Twitterizer.RateLimitedAttribute">
            <summary>
            Identifies command classes that must enforce rate limiting. This will cause rate status to be queried before each command call.
            </summary>
        </member>
        <member name="M:Twitterizer.RateLimitedAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Twitterizer.RateLimitedAttribute"/> class.
            </summary>
        </member>
    </members>
</doc>
